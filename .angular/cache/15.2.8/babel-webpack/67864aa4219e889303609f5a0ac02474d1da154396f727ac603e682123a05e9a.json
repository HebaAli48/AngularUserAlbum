{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(myClient) {\n    this.myClient = myClient;\n    this.Base_URL = 'https://jsonplaceholder.typicode.com/users';\n    this.Album_URL = 'https://jsonplaceholder.typicode.com/albums';\n    this.Photo_URL = 'https://jsonplaceholder.typicode.com/photos';\n  }\n  //All Requests\n  GetAllAlbumsbyuserId(userId) {\n    return this.myClient.get(this.Album_URL + '?userId=' + userId);\n  }\n  GetAllPhotosbyAlbumId(userId, albumId) {\n    return this.myClient.get(this.Photo_URL + '?userId=' + userId + '&albumId=' + albumId);\n  }\n  GetAllUsers() {\n    return this.myClient.get(this.Base_URL);\n  }\n  GetUserByID(id) {\n    return this.myClient.get(this.Base_URL + '/' + id);\n  }\n  AddUser(newUser) {\n    return this.myClient.post(this.Base_URL, newUser);\n  }\n  UpdateUser(id, newUser) {\n    return this.myClient.put(this.Base_URL + '/' + id, newUser);\n  }\n  DeleteUserByID(id) {\n    return this.myClient.delete(this.Base_URL + '/' + id);\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,YAAY;EACvBC,YAAoBC,QAAoB;IAApB,aAAQ,GAARA,QAAQ;IACpB,aAAQ,GAAG,4CAA4C;IACvD,cAAS,GAAG,6CAA6C;IACzD,cAAS,GAAG,6CAA6C;EAHtB;EAK3C;EACAC,oBAAoB,CAACC,MAAW;IAC9B,OAAO,IAAI,CAACF,QAAQ,CAACG,GAAG,CAAC,IAAI,CAACC,SAAS,GAAG,UAAU,GAAGF,MAAM,CAAC;EAChE;EACAG,qBAAqB,CAACH,MAAW,EAAEI,OAAY;IAC7C,OAAO,IAAI,CAACN,QAAQ,CAACG,GAAG,CACtB,IAAI,CAACI,SAAS,GAAG,UAAU,GAAGL,MAAM,GAAG,WAAW,GAAGI,OAAO,CAC7D;EACH;EACAE,WAAW;IACT,OAAO,IAAI,CAACR,QAAQ,CAACG,GAAG,CAAC,IAAI,CAACM,QAAQ,CAAC;EACzC;EACAC,WAAW,CAACC,EAAO;IACjB,OAAO,IAAI,CAACX,QAAQ,CAACG,GAAG,CAAC,IAAI,CAACM,QAAQ,GAAG,GAAG,GAAGE,EAAE,CAAC;EACpD;EACAC,OAAO,CAACC,OAAY;IAClB,OAAO,IAAI,CAACb,QAAQ,CAACc,IAAI,CAAC,IAAI,CAACL,QAAQ,EAAEI,OAAO,CAAC;EACnD;EACAE,UAAU,CAACJ,EAAO,EAAEE,OAAY;IAC9B,OAAO,IAAI,CAACb,QAAQ,CAACgB,GAAG,CAAC,IAAI,CAACP,QAAQ,GAAG,GAAG,GAAGE,EAAE,EAAEE,OAAO,CAAC;EAC7D;EACAI,cAAc,CAACN,EAAO;IACpB,OAAO,IAAI,CAACX,QAAQ,CAACkB,MAAM,CAAC,IAAI,CAACT,QAAQ,GAAG,GAAG,GAAGE,EAAE,CAAC;EACvD;;AA7BWb,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAqB,SAAZrB,YAAY;EAAAsB,YAFX;AAAM","names":["UsersService","constructor","myClient","GetAllAlbumsbyuserId","userId","get","Album_URL","GetAllPhotosbyAlbumId","albumId","Photo_URL","GetAllUsers","Base_URL","GetUserByID","id","AddUser","newUser","post","UpdateUser","put","DeleteUserByID","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\services\\users.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  constructor(private myClient: HttpClient) {}\n  private Base_URL = 'https://jsonplaceholder.typicode.com/users';\n  private Album_URL = 'https://jsonplaceholder.typicode.com/albums';\n  private Photo_URL = 'https://jsonplaceholder.typicode.com/photos'';\n\n  //All Requests\n  GetAllAlbumsbyuserId(userId: any) {\n    return this.myClient.get(this.Album_URL + '?userId=' + userId);\n  }\n  GetAllPhotosbyAlbumId(userId: any, albumId: any) {\n    return this.myClient.get(\n      this.Photo_URL + '?userId=' + userId + '&albumId=' + albumId\n    );\n  }\n  GetAllUsers() {\n    return this.myClient.get(this.Base_URL);\n  }\n  GetUserByID(id: any) {\n    return this.myClient.get(this.Base_URL + '/' + id);\n  }\n  AddUser(newUser: any) {\n    return this.myClient.post(this.Base_URL, newUser);\n  }\n  UpdateUser(id: any, newUser: any) {\n    return this.myClient.put(this.Base_URL + '/' + id, newUser);\n  }\n  DeleteUserByID(id: any) {\n    return this.myClient.delete(this.Base_URL + '/' + id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}