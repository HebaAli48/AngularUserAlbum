{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/users.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../header/header.component\";\nfunction AddNewUserComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" User Name not valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewUserComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Email is Required and match it's pattern\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewUserComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Phone is Required and must be Numbers only\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewUserComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Street is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewUserComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Suite is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewUserComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" City is Required and must be characters only\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddNewUserComponent {\n  constructor(UService, router) {\n    this.UService = UService;\n    this.router = router;\n    // <input type=\"button\" (click)=\"add(name.value, email.value, phone.value,street.value,suite.value,city.value)\" value=\"ADD\" class=\"btn btn-outline-success\" />\n    this.myEvent = new EventEmitter();\n    this.myValidation = new FormGroup({\n      name: new FormControl(\"\", [Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n      email: new FormControl(\"\", [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n      phone: new FormControl(\"\", [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n      street: new FormControl(\"\", Validators.required),\n      suite: new FormControl(\"\", Validators.required),\n      city: new FormControl(\"\", [Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n    });\n  }\n  add(name, email, phone, street, suite, city) {\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      name,\n      email,\n      phone,\n      address\n    };\n    if (this.myValidation.valid) {\n      this.myEvent.emit(thisnewUser);\n      // this.UService. AddUser(newUser).subscribe();\n      this.router.navigateByUrl(\"/users\");\n    }\n  }\n  get NameValid() {\n    if (this.myValidation.controls[\"name\"].value !== \"\") {\n      return this.myValidation.controls[\"name\"].valid;\n    }\n    return true;\n  }\n  get PhoneValid() {\n    if (this.myValidation.controls[\"phone\"].value !== \"\") {\n      return this.myValidation.controls[\"phone\"].valid;\n    }\n    return true;\n  }\n  get MailValid() {\n    if (this.myValidation.controls[\"email\"].value !== \"\") {\n      return this.myValidation.controls[\"email\"].valid;\n    }\n    return true;\n  }\n  get StreetValid() {\n    if (this.myValidation.controls[\"street\"].value !== \"\") {\n      return this.myValidation.controls[\"street\"].valid;\n    }\n    return true;\n  }\n  get SuiteValid() {\n    if (this.myValidation.controls[\"suite\"].value !== \"\") {\n      return this.myValidation.controls[\"suite\"].valid;\n    }\n    return true;\n  }\n  get CityValid() {\n    if (this.myValidation.controls[\"city\"].value !== \"\") {\n      return this.myValidation.controls[\"city\"].valid;\n    }\n    return true;\n  }\n}\nAddNewUserComponent.ɵfac = function AddNewUserComponent_Factory(t) {\n  return new (t || AddNewUserComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAddNewUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddNewUserComponent,\n  selectors: [[\"app-add-new-user\"]],\n  outputs: {\n    myEvent: \"myEvent\"\n  },\n  decls: 42,\n  vars: 7,\n  consts: [[1, \"ms-5\", \"me-5\", \"m-auto\", \"mb-5\", \"mt-3\", 2, \"opacity\", \"50%\"], [1, \"card\", \"w-75\", \"m-auto\", \"mt-5\"], [1, \"card-header\", \"text-center\", \"fs-4\"], [1, \"card-body\"], [1, \"row\"], [1, \"col\"], [1, \"form\", 3, \"formGroup\"], [1, \"form-group\", \"d-flex\", \"mt-2\"], [\"for\", \"name\", 1, \"col-3\"], [\"formControlName\", \"name\", \"id\", \"name\", \"type\", \"text\", 1, \"form-control\"], [\"name\", \"\"], [\"class\", \"text-center\", \"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"col-3\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"text\", 1, \"form-control\"], [\"email\", \"\"], [\"for\", \"phone\", 1, \"col-3\"], [\"formControlName\", \"phone\", \"id\", \"phone\", \"type\", \"text\", 1, \"form-control\"], [\"phone\", \"\"], [\"for\", \"address\", 1, \"col-3\"], [\"formControlName\", \"street\", \"id\", \"street\", \"type\", \"text\", \"placeholder\", \"street\", 1, \"form-control\"], [\"street\", \"\"], [\"formControlName\", \"suite\", \"id\", \"suite\", \"type\", \"text\", \"placeholder\", \"suite\", 1, \"form-control\"], [\"suite\", \"\"], [\"formControlName\", \"city\", \"id\", \"city\", \"type\", \"text\", \"placeholder\", \"city\", 1, \"form-control\"], [\"city\", \"\"], [1, \"form-group\", \"text-center\", \"mt-4\", \"d-flex\", \"justify-content-evenly\"], [\"type\", \"button\", \"value\", \"ADD\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [\"type\", \"button\", \"value\", \"Cancel\", \"routerLink\", \"/users\", 1, \"btn\", \"btn-outline-success\"], [1, \"text-center\", 2, \"color\", \"red\"]],\n  template: function AddNewUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r12 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-header\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n      i0.ɵɵtext(4, \" Add User \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"form\", 6)(9, \"div\", 7)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9, 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, AddNewUserComponent_div_14_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\", 12);\n      i0.ɵɵtext(17, \"Email-Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 13, 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, AddNewUserComponent_div_20_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(21, \"div\", 7)(22, \"label\", 15);\n      i0.ɵɵtext(23, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 16, 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(26, AddNewUserComponent_div_26_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(27, \"div\", 7)(28, \"label\", 18);\n      i0.ɵɵtext(29, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 19, 20)(32, \"input\", 21, 22)(34, \"input\", 23, 24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(36, AddNewUserComponent_div_36_Template, 2, 0, \"div\", 11);\n      i0.ɵɵtemplate(37, AddNewUserComponent_div_37_Template, 2, 0, \"div\", 11);\n      i0.ɵɵtemplate(38, AddNewUserComponent_div_38_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(39, \"div\", 25)(40, \"input\", 26);\n      i0.ɵɵlistener(\"click\", function AddNewUserComponent_Template_input_click_40_listener() {\n        i0.ɵɵrestoreView(_r12);\n        const _r0 = i0.ɵɵreference(13);\n        const _r2 = i0.ɵɵreference(19);\n        const _r4 = i0.ɵɵreference(25);\n        const _r6 = i0.ɵɵreference(31);\n        const _r7 = i0.ɵɵreference(33);\n        const _r8 = i0.ɵɵreference(35);\n        return i0.ɵɵresetView(ctx.add(_r0.value, _r2.value, _r4.value, _r6.value, _r7.value, _r8.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"input\", 27);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.myValidation);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.NameValid == false);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.MailValid == false);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.PhoneValid == false);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.StreetValid == false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.SuiteValid == false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.CityValid == false);\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.HeaderComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","FormControl","FormGroup","Validators","i0","AddNewUserComponent","constructor","UService","router","name","required","pattern","email","phone","street","suite","city","add","address","newUser","myValidation","valid","myEvent","emit","thisnewUser","navigateByUrl","NameValid","controls","value","PhoneValid","MailValid","StreetValid","SuiteValid","CityValid","selectors","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\add-new-user\\add-new-user.component.ts","D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\add-new-user\\add-new-user.component.html"],"sourcesContent":["import { Component, EventEmitter,Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {UsersService } from 'src/app/services/users.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-add-new-user',\n  templateUrl: './add-new-user.component.html',\n  styles: [\n  ]\n})\nexport class AddNewUserComponent {\n  constructor(public UService: UsersService, public router:Router){}\n\n  // <input type=\"button\" (click)=\"add(name.value, email.value, phone.value,street.value,suite.value,city.value)\" value=\"ADD\" class=\"btn btn-outline-success\" />\n\n \n  @Output() myEvent=new EventEmitter();\n  add(name:any, email:any, phone:any, street:any,suite:any, city:any ){\n    let address={street,suite,city};\n    let newUser= {name, email, phone, address};\n    if(this.myValidation.valid){\n      this.myEvent.emit(thisnewUser)\n\n      // this.UService. AddUser(newUser).subscribe();\n      this.router.navigateByUrl(\"/users\")\n      }\n  }\nmyValidation=new FormGroup({\n  name:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n  email:new FormControl(\"\",[Validators.required,Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n  phone:new FormControl(\"\",[Validators.required,Validators.pattern( /^[0-9]+$/)]),\n  street:new FormControl(\"\",Validators.required),\n  suite:new FormControl(\"\",Validators.required),\n  city:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n\n})\nget NameValid(){\n  if((this.myValidation.controls[\"name\"].value!==\"\")){\n    \n    return ((this.myValidation.controls[\"name\"].valid))\n   \n  }\n   return true\n}\nget PhoneValid(){\n  if((this.myValidation.controls[\"phone\"].value!==\"\")){\n    \n    return ((this.myValidation.controls[\"phone\"].valid))\n   \n  }\n   return true\n}\nget MailValid(){\n  if((this.myValidation.controls[\"email\"].value!==\"\")){\n    \n    return ((this.myValidation.controls[\"email\"].valid))\n   \n  }\n   return true\n}\nget StreetValid(){\n  if((this.myValidation.controls[\"street\"].value!==\"\")){\n    \n    return ((this.myValidation.controls[\"street\"].valid))\n   \n  }\n   return true\n}\nget SuiteValid(){\n  if((this.myValidation.controls[\"suite\"].value!==\"\")){\n    \n    return ((this.myValidation.controls[\"suite\"].valid))\n   \n  }\n   return true\n}\nget CityValid(){\n  if((this.myValidation.controls[\"city\"].value!==\"\")){\n    \n    return ((this.myValidation.controls[\"city\"].valid))\n   \n  }\n   return true}\n\n}\n","<!-- <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <form class=\"form\">\n          <div class=\"form-group d-flex mt-2\">\n            <label for=\"name\" class=\"col-3\">Name</label>\n            <input #name id=\"name\" type=\"text\" class=\"form-control\" />\n          </div>\n          <div class=\"form-group d-flex mt-2\">\n            <label for=\"email\" class=\"col-3\">Email-Address</label>\n            <input #email id=\"email\" type=\"text\" class=\"form-control\" />\n          </div>\n          <div class=\"form-group d-flex mt-2\">\n            <label for=\"phone\" class=\"col-3\">Phone</label>\n            <input #phone id=\"phone\" type=\"text\" class=\"form-control\" />\n          </div>\n          <div class=\"form-group d-flex mt-2\">\n            <label for=\"address\" class=\"col-3\">Address</label>\n            <input #street id=\"street\" type=\"text\" class=\"form-control\"  placeholder=\"street\"/>\n            <input #suite id=\"suite\" type=\"text\" class=\"form-control\"  placeholder=\"suite\"/>\n            <input #city id=\"city\" type=\"text\" class=\"form-control\"  placeholder=\"city\"/>\n          </div>\n          <div class=\"form-group text-center mt-2\">\n            <input type=\"button\" (click)=\"add(name.value, email.value, phone.value,street.value,suite.value,city.value)\" value=\"ADD\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" class=\"btn btn-outline-success\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  </div> -->\n  <div class=\"   ms-5 me-5  m-auto mb-5 mt-3\" style=\"opacity: 50%;\">\n    <app-header></app-header>\n  </div>\n  \n\n   <div class=\"card w-75 m-auto mt-5\">\n    <div class=\"card-header text-center fs-4\">\n      Add User\n    </div>\n    <div class=\"card-body\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <form [formGroup]=\"myValidation\" class=\"form\">\n            <div class=\"form-group d-flex mt-2\">\n              <label for=\"name\" class=\"col-3\">Name</label>\n              <input  formControlName=\"name\" #name id=\"name\" type=\"text\" class=\"form-control\"/>\n            </div>\n            <div class=\"text-center\"  *ngIf=\"NameValid ==false\" style=\"color: red;\"> User Name not valid</div>\n\n            <div class=\"form-group d-flex mt-2\">\n              <label for=\"email\" class=\"col-3\">Email-Address</label>\n              <input formControlName=\"email\" #email id=\"email\" type=\"text\" class=\"form-control\"  />\n            </div>\n            <div class=\"text-center\" *ngIf=\" MailValid==false\" style=\"color: red;\"> Email is Required and match it's pattern</div>\n\n            <div class=\"form-group d-flex mt-2\">\n              <label for=\"phone\" class=\"col-3\">Phone</label>\n              <input formControlName=\"phone\" #phone id=\"phone\" type=\"text\" class=\"form-control\"  />\n            </div>\n            <div class=\"text-center\" *ngIf=\"PhoneValid==false\" style=\"color: red;\"> Phone is Required and must be Numbers only</div>\n\n            <div class=\"form-group d-flex mt-2\">\n              <label for=\"address\" class=\"col-3\">Address</label>\n              <input formControlName=\"street\" #street id=\"street\" type=\"text\" class=\"form-control\"  placeholder=\"street\"   />\n              <input formControlName=\"suite\" #suite id=\"suite\" type=\"text\" class=\"form-control\"  placeholder=\"suite\"  />\n              <input formControlName=\"city\" #city id=\"city\" type=\"text\" class=\"form-control\"  placeholder=\"city\"   />\n            </div>\n            <div class=\"text-center\" *ngIf=\"StreetValid==false\" style=\"color: red;\">  Street is Required</div>\n            <div class=\"text-center\" *ngIf=\"SuiteValid==false\" style=\"color: red;\">  Suite is Required</div>\n            <div class=\"text-center\" *ngIf=\"CityValid==false\" style=\"color: red;\"> City is Required and must be characters only</div>\n  \n           \n            <div class=\"form-group text-center mt-4 d-flex justify-content-evenly\">\n              <input type=\"button\" (click)=\"add(name.value, email.value, phone.value,street.value,suite.value,city.value)\" value=\"ADD\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" class=\"btn btn-outline-success\" />\n              <input type=\"button\"  class=\"btn btn-outline-success\" value=\"Cancel\" routerLink=\"/users\"/>\n  \n            </div>\n          </form>\n        </div>\n      </div>\n      \n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}