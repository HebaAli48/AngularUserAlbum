{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(UService, router, Public, DService) {\n    this.UService = UService;\n    this.router = router;\n    this.myValidation = new FormGroup({\n      name: new FormControl(\"\", [Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n      email: new FormControl(\"\", [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n      phone: new FormControl(\"\", [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n      street: new FormControl(\"\", Validators.required),\n      suite: new FormControl(\"\", Validators.required),\n      city: new FormControl(\"\", [Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n    });\n  }\n  // onLogin() {\n  //   // Set the userDatavariable in the DataService\n  //   this.dataService.userData = {\n  //     name: 'John Doe',\n  //     email: 'john.doe@example.com'\n  //   };\n  add(name, email, phone, street, suite, city) {\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      name,\n      email,\n      phone,\n      address\n    };\n    if (this.myValidation.valid) {\n      this.UService.AddUser(newUser).subscribe();\n      this.router.navigateByUrl(\"/login\");\n    }\n  }\n  get NameValid() {\n    if (this.myValidation.controls[\"name\"].value !== \"\") {\n      return this.myValidation.controls[\"name\"].valid;\n    }\n    return true;\n  }\n  get PhoneValid() {\n    if (this.myValidation.controls[\"phone\"].value !== \"\") {\n      return this.myValidation.controls[\"phone\"].valid;\n    }\n    return true;\n  }\n  get MailValid() {\n    if (this.myValidation.controls[\"email\"].value !== \"\") {\n      return this.myValidation.controls[\"email\"].valid;\n    }\n    return true;\n  }\n  get StreetValid() {\n    if (this.myValidation.controls[\"street\"].value !== \"\") {\n      return this.myValidation.controls[\"street\"].valid;\n    }\n    return true;\n  }\n  get SuiteValid() {\n    if (this.myValidation.controls[\"suite\"].value !== \"\") {\n      return this.myValidation.controls[\"suite\"].valid;\n    }\n    return true;\n  }\n  get CityValid() {\n    if (this.myValidation.controls[\"city\"].value !== \"\") {\n      return this.myValidation.controls[\"city\"].valid;\n    }\n    return true;\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","RegisterComponent","constructor","UService","router","Public","DService","name","required","pattern","email","phone","street","suite","city","add","address","newUser","myValidation","valid","AddUser","subscribe","navigateByUrl","NameValid","controls","value","PhoneValid","MailValid","StreetValid","SuiteValid","CityValid","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {UsersService } from 'src/app/services/users.service';\r\nimport {DataService } from 'src/app/services/data.service';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n  constructor(public UService: UsersService, public router:Router,Public DService:DataService){}\r\n  // onLogin() {\r\n  //   // Set the userDatavariable in the DataService\r\n  //   this.dataService.userData = {\r\n  //     name: 'John Doe',\r\n  //     email: 'john.doe@example.com'\r\n  //   };\r\n  \r\n  add(name:any, email:any, phone:any, street:any,suite:any, city:any ){\r\n    let address={street,suite,city};\r\n    let newUser= {name, email, phone, address};\r\n    if(this.myValidation.valid){\r\n\r\n      this.UService. AddUser(newUser).subscribe();\r\n      this.router.navigateByUrl(\"/login\")\r\n      }\r\n  }\r\nmyValidation=new FormGroup({\r\n  name:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\r\n  email:new FormControl(\"\",[Validators.required,Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\r\n  phone:new FormControl(\"\",[Validators.required,Validators.pattern( /^[0-9]+$/)]),\r\n  street:new FormControl(\"\",Validators.required),\r\n  suite:new FormControl(\"\",Validators.required),\r\n  city:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)])\r\n\r\n})\r\nget NameValid(){\r\n  if((this.myValidation.controls[\"name\"].value!==\"\")){\r\n    \r\n    return ((this.myValidation.controls[\"name\"].valid))\r\n   \r\n  }\r\n   return true\r\n}\r\nget PhoneValid(){\r\n  if((this.myValidation.controls[\"phone\"].value!==\"\")){\r\n    \r\n    return ((this.myValidation.controls[\"phone\"].valid))\r\n   \r\n  }\r\n   return true\r\n}\r\nget MailValid(){\r\n  if((this.myValidation.controls[\"email\"].value!==\"\")){\r\n    \r\n    return ((this.myValidation.controls[\"email\"].valid))\r\n   \r\n  }\r\n   return true\r\n}\r\nget StreetValid(){\r\n  if((this.myValidation.controls[\"street\"].value!==\"\")){\r\n    \r\n    return ((this.myValidation.controls[\"street\"].valid))\r\n   \r\n  }\r\n   return true\r\n}\r\nget SuiteValid(){\r\n  if((this.myValidation.controls[\"suite\"].value!==\"\")){\r\n    \r\n    return ((this.myValidation.controls[\"suite\"].valid))\r\n   \r\n  }\r\n   return true\r\n}\r\nget CityValid(){\r\n  if((this.myValidation.controls[\"city\"].value!==\"\")){\r\n    \r\n    return ((this.myValidation.controls[\"city\"].valid))\r\n   \r\n  }\r\n   return true}\r\n\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}