{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/users.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../header/header.component\";\nfunction UpdateUserComponent_div_2_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" User Name not valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_div_2_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \" Email is Required and match it's pattern\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_div_2_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \" Phone is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_div_2_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \" Street is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_div_2_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \" Suite is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_div_2_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \" City is Required and must be characters only\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵtext(2, \" Edit User \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"div\", 5)(5, \"div\", 6)(6, \"form\", 7)(7, \"div\", 8)(8, \"label\", 9);\n    i0.ɵɵtext(9, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 10, 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, UpdateUserComponent_div_2_div_12_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementStart(13, \"div\", 8)(14, \"label\", 13);\n    i0.ɵɵtext(15, \"Email-Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 14, 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, UpdateUserComponent_div_2_div_18_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\", 17);\n    i0.ɵɵtext(21, \"Phone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 18, 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(24, UpdateUserComponent_div_2_div_24_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementStart(25, \"div\", 8)(26, \"label\", 20);\n    i0.ɵɵtext(27, \"Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(28, \"input\", 21, 22)(30, \"input\", 23, 24)(32, \"input\", 25, 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(34, UpdateUserComponent_div_2_div_34_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(35, UpdateUserComponent_div_2_div_35_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(36, UpdateUserComponent_div_2_div_36_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementStart(37, \"div\", 27)(38, \"input\", 28);\n    i0.ɵɵlistener(\"click\", function UpdateUserComponent_div_2_Template_input_click_38_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const _r1 = i0.ɵɵreference(11);\n      const _r3 = i0.ɵɵreference(17);\n      const _r5 = i0.ɵɵreference(23);\n      const _r7 = i0.ɵɵreference(29);\n      const _r8 = i0.ɵɵreference(31);\n      const _r9 = i0.ɵɵreference(33);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.update(_r1.value, _r3.value, _r5.value, _r7.value, _r8.value, _r9.value, $event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(39, \"input\", 29);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.myValidation);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.NameValid == false);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.MailValid == false);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.phone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.PhoneValid == false);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.address.street);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.address.suite);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.address.city);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.StreetValid == false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.SuiteValid == false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.CityValid == false);\n  }\n}\nexport class UpdateUserComponent {\n  // @Input() student:any;\n  constructor(myRoute, UService, router) {\n    this.UService = UService;\n    this.router = router;\n    this.myValidation = new FormGroup({\n      name: new FormControl(\"\", [Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n      email: new FormControl(\"\", [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n      phone: new FormControl(\"\", Validators.required),\n      street: new FormControl(\"\", Validators.required),\n      suite: new FormControl(\"\", Validators.required),\n      city: new FormControl(\"\", [Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n    });\n    this.ID = myRoute.snapshot.params[\"id\"];\n    // console.log(myRoute.snapshot.params[\"id\"]);\n  }\n\n  ngOnInit() {\n    this.UService.GetUserByID(this.ID).subscribe({\n      next: data => {\n        // console.log(data)\n        this.user = data;\n        this.myValidation.setValue({\n          name: this.user.name,\n          email: this.user.email,\n          phone: this.user.phone,\n          street: this.user.address.street,\n          suite: this.user.address.suite,\n          city: this.user.address.city\n        });\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  update(name, email, phone, street, suite, city, e) {\n    // console.log(e);\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      name,\n      email,\n      phone,\n      address\n    };\n    if (this.myValidation.valid) {\n      this.UService.UpdateUser(this.ID, newUser).subscribe();\n      this.router.navigateByUrl(\"/users\");\n    }\n  }\n  get NameValid() {\n    if (this.myValidation.controls[\"name\"].value !== \"\") {\n      return this.myValidation.controls[\"name\"].valid;\n    }\n    return true;\n  }\n  get PhoneValid() {\n    if (this.myValidation.controls[\"phone\"].value !== \"\") {\n      return this.myValidation.controls[\"phone\"].valid;\n    }\n    return true;\n  }\n  get MailValid() {\n    if (this.myValidation.controls[\"email\"].value !== \"\") {\n      return this.myValidation.controls[\"email\"].valid;\n    }\n    return true;\n  }\n  get StreetValid() {\n    if (this.myValidation.controls[\"street\"].value !== \"\") {\n      return this.myValidation.controls[\"street\"].valid;\n    }\n    return true;\n  }\n  get SuiteValid() {\n    if (this.myValidation.controls[\"suite\"].value !== \"\") {\n      return this.myValidation.controls[\"suite\"].valid;\n    }\n    return true;\n  }\n  get CityValid() {\n    if (this.myValidation.controls[\"city\"].value !== \"\") {\n      return this.myValidation.controls[\"city\"].valid;\n    }\n    return true;\n  }\n}\nUpdateUserComponent.ɵfac = function UpdateUserComponent_Factory(t) {\n  return new (t || UpdateUserComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i1.Router));\n};\nUpdateUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateUserComponent,\n  selectors: [[\"app-update-user\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"ms-5\", \"me-5\", \"m-auto\", \"mb-5\", \"mt-3\", 2, \"opacity\", \"50%\"], [\"class\", \"card w-75 m-auto mt-5\", 4, \"ngIf\"], [1, \"card\", \"w-75\", \"m-auto\", \"mt-5\"], [1, \"card-header\", \"text-center\", \"fs-4\"], [1, \"card-body\"], [1, \"row\"], [1, \"col\"], [1, \"form\", 3, \"formGroup\"], [1, \"form-group\", \"d-flex\", \"mt-2\"], [\"for\", \"name\", 1, \"col-3\"], [\"formControlName\", \"name\", \"id\", \"name\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"name\", \"\"], [\"class\", \"text-center mt-1 mb-1\", \"style\", \"color: red; \", 4, \"ngIf\"], [\"for\", \"email\", 1, \"col-3\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"email\", \"\"], [\"class\", \"text-center\", \"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"phone\", 1, \"col-3\"], [\"formControlName\", \"phone\", \"id\", \"phone\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"phone\", \"\"], [\"for\", \"address\", 1, \"col-3\"], [\"formControlName\", \"street\", \"id\", \"street\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"street\", \"\"], [\"formControlName\", \"suite\", \"id\", \"suite\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"suite\", \"\"], [\"formControlName\", \"city\", \"id\", \"city\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"city\", \"\"], [1, \"form-group\", \"text-center\", \"mt-4\", \"d-flex\", \"justify-content-evenly\"], [\"type\", \"button\", \"value\", \"UPDATE\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [\"type\", \"button\", \"value\", \"Cancel\", \"routerLink\", \"/users\", 1, \"btn\", \"btn-outline-success\"], [1, \"text-center\", \"mt-1\", \"mb-1\", 2, \"color\", \"red\"], [1, \"text-center\", 2, \"color\", \"red\"]],\n  template: function UpdateUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-header\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, UpdateUserComponent_div_2_Template, 40, 13, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n    }\n  },\n  dependencies: [i3.NgIf, i1.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.HeaderComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","UpdateUserComponent","constructor","myRoute","UService","router","name","required","pattern","email","phone","street","suite","city","ID","snapshot","params","ngOnInit","GetUserByID","subscribe","next","data","user","myValidation","setValue","address","error","err","console","log","update","e","newUser","valid","UpdateUser","navigateByUrl","NameValid","controls","value","PhoneValid","MailValid","StreetValid","SuiteValid","CityValid","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\update-user\\update-user.component.ts","D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\update-user\\update-user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-update-user',\r\n  templateUrl: './update-user.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class UpdateUserComponent implements OnInit {\r\n  // initialValue = {\r\n  //   name: ,\r\n  //   email:,\r\n  //   phone:,\r\n  //   street:,\r\n  //   suite:,\r\n  //   city:\r\n  // };\r\n  ID:any;\r\n  user:any;\r\n  // @Input() student:any;\r\n  constructor(myRoute:ActivatedRoute,public UService: UsersService, public router:Router){\r\n    this.ID = myRoute.snapshot.params[\"id\"];\r\n\r\n    // console.log(myRoute.snapshot.params[\"id\"]);\r\n\r\n    \r\n  }\r\n \r\n  ngOnInit(): void {\r\n\r\n    this.UService.GetUserByID(this.ID).subscribe({\r\n      next:(data:Object)=>{\r\n        // console.log(data)\r\n        this.user = data;\r\n        this.myValidation.setValue({\r\n          name: this.user.name,\r\n          email: this.user.email,\r\n          phone: this.user.phone,\r\n          street: this.user.address.street,\r\n          suite: this.user.address.suite,\r\n          city: this.user.address.city\r\n        });\r\n\r\n      },\r\n      error:(err)=>{console.log(err)}\r\n    });\r\n\r\n  }\r\n   \r\n  update(name:any, email:any, phone:any, street:any,suite:any, city:any,e:any){\r\n    // console.log(e);\r\n    \r\n    let address={street,suite,city};\r\n    let newUser = {name, email, phone, address};\r\n    if(this.myValidation.valid){\r\n\r\n      this.UService.UpdateUser( this.ID,newUser).subscribe();\r\n      this.router.navigateByUrl(\"/users\")\r\n      }\r\n\r\n      \r\n  }\r\n  \r\n  myValidation=new FormGroup({\r\n    \r\n    name:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\r\n    email:new FormControl(\"\",[Validators.required,Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\r\n    phone:new FormControl(\"\",Validators.required),\r\n    street:new FormControl(\"\",Validators.required),\r\n    suite:new FormControl(\"\",Validators.required),\r\n    city:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)])\r\n  \r\n  })\r\n\r\n  get NameValid(){\r\n    if((this.myValidation.controls[\"name\"].value!==\"\")){\r\n      \r\n      return ((this.myValidation.controls[\"name\"].valid))\r\n     \r\n    }\r\n     return true\r\n  }\r\n  get PhoneValid(){\r\n    if((this.myValidation.controls[\"phone\"].value!==\"\")){\r\n      \r\n      return ((this.myValidation.controls[\"phone\"].valid))\r\n     \r\n    }\r\n     return true\r\n  }\r\n  get MailValid(){\r\n    if((this.myValidation.controls[\"email\"].value!==\"\")){\r\n      \r\n      return ((this.myValidation.controls[\"email\"].valid))\r\n     \r\n    }\r\n     return true\r\n  }\r\n  get StreetValid(){\r\n    if((this.myValidation.controls[\"street\"].value!==\"\")){\r\n      \r\n      return ((this.myValidation.controls[\"street\"].valid))\r\n     \r\n    }\r\n     return true\r\n  }\r\n  get SuiteValid(){\r\n    if((this.myValidation.controls[\"suite\"].value!==\"\")){\r\n      \r\n      return ((this.myValidation.controls[\"suite\"].valid))\r\n     \r\n    }\r\n     return true\r\n  }\r\n  get CityValid(){\r\n    if((this.myValidation.controls[\"city\"].value!==\"\")){\r\n      \r\n      return ((this.myValidation.controls[\"city\"].valid))\r\n     \r\n    }\r\n     return true}\r\n  \r\n  }\r\n\r\n// import { Component, OnInit } from '@angular/core';\r\n// import { ActivatedRoute } from '@angular/router';\r\n// import { UsersService } from 'src/app/services/users.service';\r\n// import { Router } from '@angular/router';\r\n// import { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n// @Component({\r\n//   selector: 'app-update-user',\r\n//   templateUrl: './update-user.component.html',\r\n//   styles: [\r\n//   ]\r\n// })\r\n// export class UpdateUserComponent implements OnInit {\r\n//   // initialValue = {\r\n//   //   name:,\r\n//   //   email:,\r\n//   //   phone:,\r\n//   //   street:,\r\n//   //   suite:,\r\n//   //   city:\r\n//   // };\r\n  \r\n  \r\n//   ID:any;\r\n//   user:any;\r\n//   // @Input() student:any;\r\n//   constructor(myRoute:ActivatedRoute,public UService: UsersService, public router:Router){\r\n//     this.ID = myRoute.snapshot.params[\"id\"];\r\n\r\n//     // console.log(myRoute.snapshot.params[\"id\"]);\r\n\r\n    \r\n//   }\r\n \r\n//   ngOnInit(): void {\r\n\r\n//     this.UService.GetUserByID(this.ID).subscribe({\r\n//       next:(data)=>{\r\n//         // console.log(data)\r\n//         this.user = data;\r\n//       },\r\n//       error:(err)=>{console.log(err)}\r\n//     });\r\n\r\n//   }\r\n  \r\n//   update(name:any, email:any, phone:any, street:any,suite:any, city:any,e:any){\r\n//     // console.log(e);\r\n    \r\n//     let address={street,suite,city};\r\n//     let newUser = {name, email, phone, address};\r\n\r\n//       this.UService.UpdateUser( this.ID,newUser).subscribe();\r\n//       this.router.navigateByUrl(\"/users\")\r\n  \r\n      \r\n//   }\r\n  \r\n\r\n//   }\r\n\r\n","<div class=\"   ms-5 me-5  m-auto mb-5 mt-3\" style=\"opacity: 50%;\">\r\n  <app-header></app-header>\r\n</div>\r\n  <div class=\"card w-75 m-auto mt-5\"   *ngIf=\"user\">\r\n    <div class=\"card-header text-center fs-4\">\r\n      Edit User\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <form class=\"form\" [formGroup]=\"myValidation\" >\r\n            <div class=\"form-group d-flex mt-2\">\r\n              <label for=\"name\" class=\"col-3\">Name</label>\r\n              <input  formControlName=\"name\" #name id=\"name\" type=\"text\" class=\"form-control\" value=\"{{user.name}}\"/>\r\n            </div>\r\n                      <div class=\"text-center mt-1 mb-1\" *ngIf=\"NameValid ==false\" style=\"color: red; \"> User Name not valid</div>\r\n\r\n            <div class=\"form-group d-flex mt-2\">\r\n              <label for=\"email\" class=\"col-3\">Email-Address</label>\r\n              <input formControlName=\"email\" #email id=\"email\" type=\"text\" class=\"form-control\"  value=\"{{user.email}}\"  />\r\n            </div>\r\n                        <div class=\"text-center\" *ngIf=\" MailValid==false\" style=\"color: red;\"> Email is Required and match it's pattern</div>\r\n\r\n            <div class=\"form-group d-flex mt-2\">\r\n              <label for=\"phone\" class=\"col-3\">Phone</label>\r\n              <input formControlName=\"phone\" #phone id=\"phone\" type=\"text\" class=\"form-control\"  value=\"{{user.phone}}\" />\r\n            </div>\r\n                        <div class=\"text-center\" *ngIf=\"PhoneValid==false\" style=\"color: red;\"> Phone is Required</div>\r\n\r\n            <div class=\"form-group d-flex mt-2\">\r\n              <label for=\"address\" class=\"col-3\">Address</label>\r\n              <input formControlName=\"street\" #street id=\"street\" type=\"text\" class=\"form-control\"    value=\"{{user.address.street}}\" />\r\n              <input formControlName=\"suite\" #suite id=\"suite\" type=\"text\" class=\"form-control\"    value=\"{{user.address.suite}}\" />\r\n              <input formControlName=\"city\" #city id=\"city\" type=\"text\" class=\"form-control\"   value=\"{{user.address.city}}\" />\r\n            </div>\r\n                        <div class=\"text-center\" *ngIf=\"StreetValid==false\" style=\"color: red;\">  Street is Required</div>\r\n            <div class=\"text-center\" *ngIf=\"SuiteValid==false\" style=\"color: red;\">  Suite is Required</div>\r\n            <div class=\"text-center\" *ngIf=\"CityValid==false\" style=\"color: red;\"> City is Required and must be characters only</div>\r\n\r\n           \r\n            <div class=\"form-group text-center mt-4 d-flex justify-content-evenly\">\r\n              <input type=\"button\" (click)=\"update(name.value, email.value, phone.value,street.value,suite.value,city.value,$event)\" value=\"UPDATE\" class=\"btn btn-outline-success\" />\r\n              <input type=\"button\"  class=\"btn btn-outline-success\" value=\"Cancel\" routerLink=\"/users\"/>\r\n  \r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n<!-- \r\n  <div class=\"alert alert-info   w-75 m-auto\" style=\"opacity: 50%;\">\r\n    <app-header></app-header>\r\n  </div>\r\n  \r\n    <div class=\"card w-75 m-auto mt-5\"   *ngIf=\"user\">\r\n      <div class=\"card-header text-center fs-4\">\r\n        Edit User\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <form class=\"form\"  >\r\n              <div class=\"form-group d-flex mt-2\">\r\n                <label for=\"name\" class=\"col-3\">Name</label>\r\n                <input  #name id=\"name\" type=\"text\" class=\"form-control\" value=\"{{user.name}}\"/>\r\n              </div>\r\n  \r\n                        \r\n              <div class=\"form-group d-flex mt-2\">\r\n                <label for=\"email\" class=\"col-3\">Email-Address</label>\r\n                <input  #email id=\"email\" type=\"email\" class=\"form-control\"  value=\"{{user.email}}\"  />\r\n              </div>\r\n  \r\n              <div class=\"form-group d-flex mt-2\">\r\n                <label for=\"phone\" class=\"col-3\">Phone</label>\r\n                <input  #phone id=\"phone\" type=\"text\" class=\"form-control\"  value=\"{{user.phone}}\" />\r\n              </div>\r\n  \r\n              <div class=\"form-group d-flex mt-2\">\r\n                <label for=\"address\" class=\"col-3\">Address</label>\r\n                <input  #street id=\"street\" type=\"text\" class=\"form-control\"    value=\"{{user.address.street}}\" />\r\n                <input  #suite id=\"suite\" type=\"text\" class=\"form-control\"    value=\"{{user.address.suite}}\" />\r\n                <input  #city id=\"city\" type=\"text\" class=\"form-control\"   value=\"{{user.address.city}}\" />\r\n              </div>\r\n  \r\n             \r\n              <div class=\"form-group text-center mt-4 d-flex justify-content-evenly\">\r\n                <input type=\"submit\" (click)=\"update(name.value, email.value, phone.value,street.value,suite.value,city.value,$event)\" value=\"UPDATE\" class=\"btn btn-outline-success\" />\r\n                <input type=\"button\"  class=\"btn btn-outline-success\" value=\"Cancel\" routerLink=\"/users\"/>\r\n    \r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div> -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}