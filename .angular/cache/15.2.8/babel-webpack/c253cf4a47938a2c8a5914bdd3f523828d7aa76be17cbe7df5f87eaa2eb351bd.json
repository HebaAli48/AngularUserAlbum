{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(UService, router) {\n    this.UService = UService;\n    this.router = router;\n    this.myValidation = new FormGroup({\n      name: new FormControl(\"\", [Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n      email: new FormControl(\"\", [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n      phone: new FormControl(\"\", [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n      street: new FormControl(\"\", [Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n      suite: new FormControl(\"\", [Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n      city: new FormControl(\"\", [Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n    });\n  }\n  add(name, email, phone, street, suite, city) {\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      name,\n      email,\n      phone,\n      address\n    };\n    this.UService.AddUser(newUser).subscribe();\n    this.router.navigateByUrl(\"/users\");\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAS5D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAC5BC,YAAmBC,QAAsB,EAASC,MAAa;IAA5C,aAAQ,GAARD,QAAQ;IAAuB,WAAM,GAANC,MAAM;IAQ1D,iBAAY,GAAC,IAAIL,SAAS,CAAC;MACzBM,IAAI,EAAC,IAAIP,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACO,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;MAC/EC,KAAK,EAAC,IAAIV,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACO,OAAO,CAAC,+CAA+C,CAAC,CAAC,CAAC;MACnHE,KAAK,EAAC,IAAIX,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACO,OAAO,CAAE,UAAU,CAAC,CAAC,CAAC;MAC/EG,MAAM,EAAC,IAAIZ,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACO,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;MACjFI,KAAK,EAAC,IAAIb,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACO,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;MAChFK,IAAI,EAAC,IAAId,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACO,OAAO,CAAC,WAAW,CAAC,CAAC;KAE/E,CAAC;EAhBiE;EAEjEM,GAAG,CAACR,IAAQ,EAAEG,KAAS,EAAEC,KAAS,EAAEC,MAAU,EAACC,KAAS,EAAEC,IAAQ;IAChE,IAAIE,OAAO,GAAC;MAACJ,MAAM;MAACC,KAAK;MAACC;IAAI,CAAC;IAC/B,IAAIG,OAAO,GAAE;MAACV,IAAI;MAAEG,KAAK;MAAEC,KAAK;MAAEK;IAAO,CAAC;IAC1C,IAAI,CAACX,QAAQ,CAAEa,OAAO,CAACD,OAAO,CAAC,CAACE,SAAS,EAAE;IAC3C,IAAI,CAACb,MAAM,CAACc,aAAa,CAAC,QAAQ,CAAC;EACrC;CAYD;AApBYjB,iBAAiB,eAL7BJ,SAAS,CAAC;EACTsB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWpB,iBAAiB,CAoB7B;SApBYA,iBAAiB","names":["Component","FormControl","FormGroup","Validators","RegisterComponent","constructor","UService","router","name","required","pattern","email","phone","street","suite","city","add","address","newUser","AddUser","subscribe","navigateByUrl","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  constructor(public UService: UsersService, public router:Router){}\n\n  add(name:any, email:any, phone:any, street:any,suite:any, city:any ){\n    let address={street,suite,city};\n    let newUser= {name, email, phone, address};\n    this.UService. AddUser(newUser).subscribe();\n    this.router.navigateByUrl(\"/users\")\n  }\nmyValidation=new FormGroup({\n  name:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n  email:new FormControl(\"\",[Validators.required,Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n  phone:new FormControl(\"\",[Validators.required,Validators.pattern( /^[0-9]+$/)]),\n  street:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n  suite:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n  city:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n\n})\n\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}