{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(myClient) {\n    this.myClient = myClient;\n    this.Base_URL = \"http://localhost:3000/users\";\n    this.Album_URL = \"http://localhost:3000/albums\";\n  }\n  //2-All Requests\n  GetAllAlbumsbyuserId(userId) {\n    // return this.myClient.get(this.Album_URL+\"?userId=\"+userId);\n    return this.myClient.get(this.Base_URL + \"/albums?id=\" + albumId);\n  }\n  GetAllUsers() {\n    // console.log(this.myClient.get(this.Base_URL));\n    return this.myClient.get(this.Base_URL);\n  }\n  GetUserByID(id) {\n    return this.myClient.get(this.Base_URL + \"/\" + id);\n  }\n  AddUser(newUser) {\n    return this.myClient.post(this.Base_URL, newUser);\n  }\n  UpdateUser(id, newUser) {\n    return this.myClient.put(this.Base_URL + \"/\" + id, newUser);\n  }\n  DeleteUserByID(id) {\n    return this.myClient.delete(this.Base_URL + \"/\" + id);\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,YAAY;EACvBC,YAAoBC,QAAmB;IAAnB,aAAQ,GAARA,QAAQ;IAEpB,aAAQ,GAAG,6BAA6B;IAExC,cAAS,GAAG,8BAA8B;EAJP;EAM3C;EACAC,oBAAoB,CAACC,MAAU;IAC7B;IAEA,OAAO,IAAI,CAACF,QAAQ,CAACG,GAAG,CAAC,IAAI,CAACC,QAAQ,GAAC,aAAa,GAACC,OAAO,CAAC;EAC/D;EACAC,WAAW;IACT;IAEA,OAAO,IAAI,CAACN,QAAQ,CAACG,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC;EACzC;EACAG,WAAW,CAACC,EAAM;IAChB,OAAO,IAAI,CAACR,QAAQ,CAACG,GAAG,CAAC,IAAI,CAACC,QAAQ,GAAC,GAAG,GAACI,EAAE,CAAC;EAChD;EACAC,OAAO,CAACC,OAAW;IACjB,OAAO,IAAI,CAACV,QAAQ,CAACW,IAAI,CAAC,IAAI,CAACP,QAAQ,EAACM,OAAO,CAAC;EAClD;EACAE,UAAU,CAACJ,EAAM,EAAEE,OAAW;IAC5B,OAAO,IAAI,CAACV,QAAQ,CAACa,GAAG,CAAC,IAAI,CAACT,QAAQ,GAAC,GAAG,GAACI,EAAE,EAAEE,OAAO,CAAC;EACzD;EACAI,cAAc,CAACN,EAAM;IACvB,OAAQ,IAAI,CAACR,QAAQ,CAACe,MAAM,CAAC,IAAI,CAACX,QAAQ,GAAC,GAAG,GAACI,EAAE,CAAC;EAChD;;AA7BWV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAkB,SAAZlB,YAAY;EAAAmB,YAFX;AAAM","names":["UsersService","constructor","myClient","GetAllAlbumsbyuserId","userId","get","Base_URL","albumId","GetAllUsers","GetUserByID","id","AddUser","newUser","post","UpdateUser","put","DeleteUserByID","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\services\\users.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  constructor(private myClient:HttpClient) { }\n\n  private Base_URL = \"http://localhost:3000/users\";\n  \n  private Album_URL = \"http://localhost:3000/albums\";\n\n  //2-All Requests\n  GetAllAlbumsbyuserId(userId:any){\n    // return this.myClient.get(this.Album_URL+\"?userId=\"+userId);\n    \n    return this.myClient.get(this.Base_URL+\"/albums?id=\"+albumId);\n  }\n  GetAllUsers(){\n    // console.log(this.myClient.get(this.Base_URL));\n    \n    return this.myClient.get(this.Base_URL);\n  }\n  GetUserByID(id:any){\n    return this.myClient.get(this.Base_URL+\"/\"+id);\n  }\n  AddUser(newUser:any){\n    return this.myClient.post(this.Base_URL,newUser);\n  }\n  UpdateUser(id:any, newUser:any){\n    return this.myClient.put(this.Base_URL+\"/\"+id, newUser);\n  }\n  DeleteUserByID(id:any){\nreturn  this.myClient.delete(this.Base_URL+\"/\"+id)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}