{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet UsersComponent = class UsersComponent {\n  constructor(UService, router) {\n    this.UService = UService;\n    this.router = router;\n    this.myValidation = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n      email: new FormControl('', [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n      phone: new FormControl('', Validators.required),\n      street: new FormControl('', Validators.required),\n      suite: new FormControl('', Validators.required),\n      city: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n    });\n  }\n  ngOnInit() {\n    this.UService.GetAllUsers().subscribe({\n      next: data => {\n        console.log(data);\n        this.users = data;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  clickUpdate(x) {\n    // console.log(x.target.id);\n    this.ID = x.target.id;\n    this.myValidation.setValue({\n      name: this.users[this.ID].name,\n      email: this.users[this.ID].email,\n      phone: this.users[this.ID].phone,\n      street: this.users[this.ID].address.street,\n      suite: this.users[this.ID].address.suite,\n      city: this.users[this.ID].address.city\n    });\n  }\n  update(name, email, phone, street, suite, city) {\n    // console.log(e);\n    console.log(this.ID);\n    console.log(this.users[this.ID].name);\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      name,\n      email,\n      phone,\n      address\n    };\n    console.log(newUser);\n    if (this.myValidation.valid) {\n      //       const upd_obj = this.users.map(obj => {\n      //  if (obj.id == 1) {\n      //   obj.name='Harry';\n      //  }\n      //  return obj;\n      // })\n      this.users[this.ID].name = newUser.name;\n      // this.user=newUser\n      // this.UService.UpdateUser( this.ID,newUser).subscribe();\n      this.router.navigateByUrl(\"/users\");\n    }\n    this.users[this.ID].name = newUser.name;\n    this.users[this.ID].email = newUser.email;\n    this.users[this.ID].phone = newUser.phone;\n    this.users[this.ID].address.street = newUser.address.street;\n    this.users[this.ID].address.suite = newUser.address.suite;\n    this.users[this.ID].address.city = newUser.address.city;\n  }\n  add(name, email, phone, street, suite, city) {\n    // console.log(this.users);\n    let id = this.users[this.users.length - 1].id + 1;\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      id,\n      name,\n      email,\n      phone,\n      address\n    };\n    if (this.myValidation.valid) {\n      // this.myEvent.emit(newUser)\n      this.users.push(newUser);\n      // this.UService. AddUser(newUser).subscribe();\n      this.router.navigateByUrl('/users');\n    }\n  }\n  get NameValid() {\n    if (this.myValidation.controls['name'].value !== '') {\n      return this.myValidation.controls['name'].valid;\n    }\n    return true;\n  }\n  get PhoneValid() {\n    if (this.myValidation.controls['phone'].value !== '') {\n      return this.myValidation.controls['phone'].valid;\n    }\n    return true;\n  }\n  get MailValid() {\n    if (this.myValidation.controls['email'].value !== '') {\n      return this.myValidation.controls['email'].valid;\n    }\n    return true;\n  }\n  get StreetValid() {\n    if (this.myValidation.controls['street'].value !== '') {\n      return this.myValidation.controls['street'].valid;\n    }\n    return true;\n  }\n  get SuiteValid() {\n    if (this.myValidation.controls['suite'].value !== '') {\n      return this.myValidation.controls['suite'].valid;\n    }\n    return true;\n  }\n  get CityValid() {\n    if (this.myValidation.controls['city'].value !== '') {\n      return this.myValidation.controls['city'].valid;\n    }\n    return true;\n  }\n};\nUsersComponent = __decorate([Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styles: []\n})], UsersComponent);\nexport { UsersComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","UsersComponent","constructor","UService","router","name","required","pattern","email","phone","street","suite","city","ngOnInit","GetAllUsers","subscribe","next","data","console","log","users","error","err","clickUpdate","x","ID","target","id","myValidation","setValue","address","update","newUser","valid","navigateByUrl","add","length","push","NameValid","controls","value","PhoneValid","MailValid","StreetValid","SuiteValid","CityValid","selector","templateUrl","styles"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\users\\users.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UsersService } from 'src/app/services/users.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styles: [\n  ]\n})\nexport class UsersComponent implements OnInit {\n  ID:any;\n  user:any;\n  constructor( public UService:UsersService,public router: Router){}\n    users:any;\n  ngOnInit(): void {\n        this.UService.GetAllUsers().subscribe({\n      next:(data)=>{\n        console.log(data)\n        this.users = data;\n      },\n      error:(err)=>{console.log(err)}\n    })\n  }\n  \n  clickUpdate(x:any){\n    // console.log(x.target.id);\nthis.ID=x.target.id\n\n        this.myValidation.setValue({\n          name: this.users[this.ID].name,\n          email: this.users[this.ID].email,\n          phone: this.users[this.ID].phone,\n          street: this.users[this.ID].address.street,\n          suite: this.users[this.ID].address.suite,\n          city: this.users[this.ID].address.city\n        });\n\n   \n  }\n  clickDelete\n\n  update(name:any, email:any, phone:any, street:any,suite:any, city:any){\n    // console.log(e);\n   console.log(this.ID);\n   console.log( this.users[this.ID].name);\n   \n   \n    let address={street,suite,city};\n    let newUser = {name, email, phone, address};\n     console.log(newUser);\n    if(this.myValidation.valid){\n\n//       const upd_obj = this.users.map(obj => {\n//  if (obj.id == 1) {\n//   obj.name='Harry';\n//  }\n//  return obj;\n// })\n      this.users[this.ID].name=newUser.name\n        // this.user=newUser\n      // this.UService.UpdateUser( this.ID,newUser).subscribe();\n      this.router.navigateByUrl(\"/users\")\n      }\n      this.users[this.ID].name=newUser.name\n      this.users[this.ID].email=newUser.email\n      this.users[this.ID].phone=newUser.phone\n      this.users[this.ID].address.street=newUser.address.street\n      this.users[this.ID].address.suite=newUser.address.suite\n      this.users[this.ID].address.city=newUser.address.city\n  }\n\n\n\n\n\n\n  add(name: any, email: any, phone: any, street: any, suite: any, city: any) {\n    // console.log(this.users);\n\n  let id=(this.users[this.users.length-1].id) +1\n\n    let address = { street, suite, city };\n    let newUser = {id,name, email, phone, address };\n    if (this.myValidation.valid) {\n      // this.myEvent.emit(newUser)\n      this.users.push(newUser);\n      \n      // this.UService. AddUser(newUser).subscribe();\n      this.router.navigateByUrl('/users');\n    }\n  }\n\n\n\n\n\n\n  myValidation = new FormGroup({\n    name: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/[a-zA-Z]+/),\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/),\n    ]),\n    phone: new FormControl('', \n      Validators.required\n     ),\n    street: new FormControl('', Validators.required),\n    suite: new FormControl('', Validators.required),\n    city: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/[a-zA-Z]+/),\n    ]),\n  });\n  get NameValid() {\n    if (this.myValidation.controls['name'].value !== '') {\n      return this.myValidation.controls['name'].valid;\n    }\n    return true;\n  }\n  get PhoneValid() {\n    if (this.myValidation.controls['phone'].value !== '') {\n      return this.myValidation.controls['phone'].valid;\n    }\n    return true;\n  }\n  get MailValid() {\n    if (this.myValidation.controls['email'].value !== '') {\n      return this.myValidation.controls['email'].valid;\n    }\n    return true;\n  }\n  get StreetValid() {\n    if (this.myValidation.controls['street'].value !== '') {\n      return this.myValidation.controls['street'].valid;\n    }\n    return true;\n  }\n  get SuiteValid() {\n    if (this.myValidation.controls['suite'].value !== '') {\n      return this.myValidation.controls['suite'].valid;\n    }\n    return true;\n  }\n  get CityValid() {\n    if (this.myValidation.controls['city'].value !== '') {\n      return this.myValidation.controls['city'].valid;\n    }\n    return true;\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}