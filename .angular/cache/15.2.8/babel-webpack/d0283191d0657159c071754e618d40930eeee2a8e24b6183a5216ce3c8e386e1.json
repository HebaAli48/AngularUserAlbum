{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/users.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../header/header.component\";\nfunction UpdateUserComponent_div_2_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1, \" Email is Required and match it's pattern\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_div_2_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1, \" Phone is Required and must be Numbers only\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_div_2_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1, \" Street is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_div_2_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1, \" Suite is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_div_2_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1, \" City is Required and must be characters only\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵtext(2, \" Edit User \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"div\", 5)(5, \"div\", 6)(6, \"form\", 7)(7, \"div\", 8)(8, \"label\", 9);\n    i0.ɵɵtext(9, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 10, 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 8)(13, \"label\", 12);\n    i0.ɵɵtext(14, \"Email-Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 13, 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, UpdateUserComponent_div_2_div_17_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementStart(18, \"div\", 8)(19, \"label\", 16);\n    i0.ɵɵtext(20, \"Phone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 17, 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(23, UpdateUserComponent_div_2_div_23_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementStart(24, \"div\", 8)(25, \"label\", 19);\n    i0.ɵɵtext(26, \"Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(27, \"input\", 20, 21)(29, \"input\", 22, 23)(31, \"input\", 24, 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(33, UpdateUserComponent_div_2_div_33_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(34, UpdateUserComponent_div_2_div_34_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(35, UpdateUserComponent_div_2_div_35_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementStart(36, \"div\", 26)(37, \"input\", 27);\n    i0.ɵɵlistener(\"click\", function UpdateUserComponent_div_2_Template_input_click_37_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const _r1 = i0.ɵɵreference(11);\n      const _r2 = i0.ɵɵreference(16);\n      const _r4 = i0.ɵɵreference(22);\n      const _r6 = i0.ɵɵreference(28);\n      const _r7 = i0.ɵɵreference(30);\n      const _r8 = i0.ɵɵreference(32);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.update(_r1.value, _r2.value, _r4.value, _r6.value, _r7.value, _r8.value, $event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(38, \"input\", 28);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.myValidation);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.name);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.MailValid == false);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.phone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.PhoneValid == false);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.address.street);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.address.suite);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.address.city);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.StreetValid == false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.SuiteValid == false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.CityValid == false);\n  }\n}\nexport class UpdateUserComponent {\n  // @Input() student:any;\n  constructor(myRoute, UService, router) {\n    this.UService = UService;\n    this.router = router;\n    this.ID = myRoute.snapshot.params[\"id\"];\n    // console.log(myRoute.snapshot.params[\"id\"]);\n  }\n\n  ngOnInit() {\n    this.UService.GetUserByID(this.ID).subscribe({\n      next: data => {\n        // console.log(data)\n        this.user = data;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  update(name, email, phone, street, suite, city, e) {\n    // console.log(e);\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      name,\n      email,\n      phone,\n      address\n    };\n    // if(this.myValidation.valid){\n    this.UService.UpdateUser(this.ID, newUser).subscribe();\n    this.router.navigateByUrl(\"/users\");\n    // }\n  }\n}\n\nUpdateUserComponent.ɵfac = function UpdateUserComponent_Factory(t) {\n  return new (t || UpdateUserComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i1.Router));\n};\nUpdateUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateUserComponent,\n  selectors: [[\"app-update-user\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"alert\", \"alert-info\", \"w-75\", \"m-auto\", 2, \"opacity\", \"50%\"], [\"class\", \"card w-75 m-auto mt-5\", 4, \"ngIf\"], [1, \"card\", \"w-75\", \"m-auto\", \"mt-5\"], [1, \"card-header\", \"text-center\", \"fs-4\"], [1, \"card-body\"], [1, \"row\"], [1, \"col\"], [1, \"form\", 3, \"formGroup\"], [1, \"form-group\", \"d-flex\", \"mt-2\"], [\"for\", \"name\", 1, \"col-3\"], [\"formControlName\", \"name\", \"id\", \"name\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"name\", \"\"], [\"for\", \"email\", 1, \"col-3\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"email\", \"\"], [\"class\", \"text-center\", \"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"phone\", 1, \"col-3\"], [\"formControlName\", \"phone\", \"id\", \"phone\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"phone\", \"\"], [\"for\", \"address\", 1, \"col-3\"], [\"formControlName\", \"street\", \"id\", \"street\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"street\", \"\"], [\"formControlName\", \"suite\", \"id\", \"suite\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"suite\", \"\"], [\"formControlName\", \"city\", \"id\", \"city\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"city\", \"\"], [1, \"form-group\", \"text-center\", \"mt-4\", \"d-flex\", \"justify-content-evenly\"], [\"type\", \"button\", \"value\", \"UPDATE\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [\"type\", \"button\", \"value\", \"Cancel\", \"routerLink\", \"/users\", 1, \"btn\", \"btn-outline-success\"], [1, \"text-center\", 2, \"color\", \"red\"]],\n  template: function UpdateUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-header\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, UpdateUserComponent_div_2_Template, 39, 12, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n    }\n  },\n  dependencies: [i3.NgIf, i1.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.HeaderComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","UpdateUserComponent","constructor","myRoute","UService","router","ID","snapshot","params","ngOnInit","GetUserByID","subscribe","next","data","user","error","err","console","log","update","name","email","phone","street","suite","city","e","address","newUser","UpdateUser","navigateByUrl","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\update-user\\update-user.component.html","D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\update-user\\update-user.component.ts"],"sourcesContent":["<div class=\"alert alert-info   w-75 m-auto\" style=\"opacity: 50%;\">\n  <app-header></app-header>\n</div>\n\n  <div class=\"card w-75 m-auto mt-5\"   *ngIf=\"user\">\n    <div class=\"card-header text-center fs-4\">\n      Edit User\n    </div>\n    <div class=\"card-body\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <form class=\"form\" [formGroup]=\"myValidation\" >\n            <div class=\"form-group d-flex mt-2\">\n              <label for=\"name\" class=\"col-3\">Name</label>\n              <input  formControlName=\"name\" #name id=\"name\" type=\"text\" class=\"form-control\" value=\"{{user.name}}\"/>\n            </div>\n                      <!-- <div class=\"text-center mt-1 mb-1\" *ngIf=\"NameValid ==false\" style=\"color: red; \"> User Name not valid</div> -->\n\n            <div class=\"form-group d-flex mt-2\">\n              <label for=\"email\" class=\"col-3\">Email-Address</label>\n              <input formControlName=\"email\" #email id=\"email\" type=\"text\" class=\"form-control\"  value=\"{{user.email}}\"  />\n            </div>\n                        <div class=\"text-center\" *ngIf=\" MailValid==false\" style=\"color: red;\"> Email is Required and match it's pattern</div>\n\n            <div class=\"form-group d-flex mt-2\">\n              <label for=\"phone\" class=\"col-3\">Phone</label>\n              <input formControlName=\"phone\" #phone id=\"phone\" type=\"text\" class=\"form-control\"  value=\"{{user.phone}}\" />\n            </div>\n                        <div class=\"text-center\" *ngIf=\"PhoneValid==false\" style=\"color: red;\"> Phone is Required and must be Numbers only</div>\n\n            <div class=\"form-group d-flex mt-2\">\n              <label for=\"address\" class=\"col-3\">Address</label>\n              <input formControlName=\"street\" #street id=\"street\" type=\"text\" class=\"form-control\"    value=\"{{user.address.street}}\" />\n              <input formControlName=\"suite\" #suite id=\"suite\" type=\"text\" class=\"form-control\"    value=\"{{user.address.suite}}\" />\n              <input formControlName=\"city\" #city id=\"city\" type=\"text\" class=\"form-control\"   value=\"{{user.address.city}}\" />\n            </div>\n                        <div class=\"text-center\" *ngIf=\"StreetValid==false\" style=\"color: red;\">  Street is Required</div>\n            <div class=\"text-center\" *ngIf=\"SuiteValid==false\" style=\"color: red;\">  Suite is Required</div>\n            <div class=\"text-center\" *ngIf=\"CityValid==false\" style=\"color: red;\"> City is Required and must be characters only</div>\n\n           \n            <div class=\"form-group text-center mt-4 d-flex justify-content-evenly\">\n              <input type=\"button\" (click)=\"update(name.value, email.value, phone.value,street.value,suite.value,city.value,$event)\" value=\"UPDATE\" class=\"btn btn-outline-success\" />\n              <input type=\"button\"  class=\"btn btn-outline-success\" value=\"Cancel\" routerLink=\"/users\"/>\n  \n            </div>\n          </form>\n        </div>\n      </div>\n      \n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UsersService } from 'src/app/services/users.service';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styles: [\n  ]\n})\nexport class UpdateUserComponent implements OnInit {\n  // initialValue = {\n  //   name:,\n  //   email:,\n  //   phone:,\n  //   street:,\n  //   suite:,\n  //   city:\n  // };\n  \n  \n  ID:any;\n  user:any;\n  // @Input() student:any;\n  constructor(myRoute:ActivatedRoute,public UService: UsersService, public router:Router){\n    this.ID = myRoute.snapshot.params[\"id\"];\n\n    // console.log(myRoute.snapshot.params[\"id\"]);\n\n    \n  }\n \n  ngOnInit(): void {\n\n    this.UService.GetUserByID(this.ID).subscribe({\n      next:(data)=>{\n        // console.log(data)\n        this.user = data;\n      },\n      error:(err)=>{console.log(err)}\n    });\n\n  }\n  \n  update(name:any, email:any, phone:any, street:any,suite:any, city:any,e:any){\n    // console.log(e);\n    \n    let address={street,suite,city};\n    let newUser = {name, email, phone, address};\n    // if(this.myValidation.valid){\n\n      this.UService.UpdateUser( this.ID,newUser).subscribe();\n      this.router.navigateByUrl(\"/users\")\n      // }\n      \n  }\n  \n  // myValidation=new FormGroup({\n    \n  //   name:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n  //   email:new FormControl(\"\",[Validators.required,Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n  //   phone:new FormControl(\"\",[Validators.required,Validators.pattern( /^[0-9]+$/)]),\n  //   street:new FormControl(\"\",Validators.required),\n  //   suite:new FormControl(\"\",Validators.required),\n  //   city:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n    \n    \n  \n  // })\n  // get NameValid(){\n  //   if((this.myValidation.controls[\"name\"].value!==\"\")){\n      \n  //     return ((this.myValidation.controls[\"name\"].valid))\n     \n  //   }\n  //    return true\n  // }\n  // get PhoneValid(){\n  //   if((this.myValidation.controls[\"phone\"].value!==\"\")){\n      \n  //     return ((this.myValidation.controls[\"phone\"].valid))\n     \n  //   }\n  //    return true\n  // }\n  // get MailValid(){\n  //   if((this.myValidation.controls[\"email\"].value!==\"\")){\n      \n  //     return ((this.myValidation.controls[\"email\"].valid))\n     \n  //   }\n  //    return true\n  // }\n  // get StreetValid(){\n  //   if((this.myValidation.controls[\"street\"].value!==\"\")){\n      \n  //     return ((this.myValidation.controls[\"street\"].valid))\n     \n  //   }\n  //    return true\n  // }\n  // get SuiteValid(){\n  //   if((this.myValidation.controls[\"suite\"].value!==\"\")){\n      \n  //     return ((this.myValidation.controls[\"suite\"].valid))\n     \n  //   }\n  //    return true\n  // }\n  // get CityValid(){\n  //   if((this.myValidation.controls[\"city\"].value!==\"\")){\n      \n  //     return ((this.myValidation.controls[\"city\"].valid))\n     \n  //   }\n  //    return true}\n  \n  }\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}