{"ast":null,"code":"\"use strict\";\n\n// import { Component, OnInit } from '@angular/core';\n// import { ActivatedRoute } from '@angular/router';\n// import { UsersService } from 'src/app/services/users.service';\n// import { Router } from '@angular/router';\n// import { FormControl, FormGroup, Validators } from '@angular/forms';\n// @Component({\n//   selector: 'app-update-user',\n//   templateUrl: './update-user.component.html',\n//   styles: [\n//   ]\n// })\n// export class UpdateUserComponent implements OnInit {\n//   // initialValue = {\n//   //   name:,\n//   //   email:,\n//   //   phone:,\n//   //   street:,\n//   //   suite:,\n//   //   city:\n//   // };\n//   ID:any;\n//   user:any;\n//   // @Input() student:any;\n//   constructor(myRoute:ActivatedRoute,public UService: UsersService, public router:Router){\n//     this.ID = myRoute.snapshot.params[\"id\"];\n//     // console.log(myRoute.snapshot.params[\"id\"]);\n//   }\n//   ngOnInit(): void {\n//     this.UService.GetUserByID(this.ID).subscribe({\n//       next:(data)=>{\n//         // console.log(data)\n//         this.user = data;\n//       },\n//       error:(err)=>{console.log(err)}\n//     });\n//   }\n//   update(name:any, email:any, phone:any, street:any,suite:any, city:any,e:any){\n//     // console.log(e);\n//     let address={street,suite,city};\n//     let newUser = {name, email, phone, address};\n//     if(this.myValidation.valid){\n//       this.UService.UpdateUser( this.ID,newUser).subscribe();\n//       this.router.navigateByUrl(\"/users\")\n//       }\n//   }\n//   myValidation=new FormGroup({\n//     name:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n//     email:new FormControl(\"\",[Validators.required,Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n//     phone:new FormControl(\"\",[Validators.required,Validators.pattern( /^[0-9]+$/)]),\n//     street:new FormControl(\"\",Validators.required),\n//     suite:new FormControl(\"\",Validators.required),\n//     city:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n//   })\n//   get NameValid(){\n//     if((this.myValidation.controls[\"name\"].value!==\"\")){\n//       return ((this.myValidation.controls[\"name\"].valid))\n//     }\n//      return true\n//   }\n//   get PhoneValid(){\n//     if((this.myValidation.controls[\"phone\"].value!==\"\")){\n//       return ((this.myValidation.controls[\"phone\"].valid))\n//     }\n//      return true\n//   }\n//   get MailValid(){\n//     if((this.myValidation.controls[\"email\"].value!==\"\")){\n//       return ((this.myValidation.controls[\"email\"].valid))\n//     }\n//      return true\n//   }\n//   get StreetValid(){\n//     if((this.myValidation.controls[\"street\"].value!==\"\")){\n//       return ((this.myValidation.controls[\"street\"].valid))\n//     }\n//      return true\n//   }\n//   get SuiteValid(){\n//     if((this.myValidation.controls[\"suite\"].value!==\"\")){\n//       return ((this.myValidation.controls[\"suite\"].valid))\n//     }\n//      return true\n//   }\n//   get CityValid(){\n//     if((this.myValidation.controls[\"city\"].value!==\"\")){\n//       return ((this.myValidation.controls[\"city\"].valid))\n//     }\n//      return true}\n//   }\n// import { Component, OnInit } from '@angular/core';\n// import { ActivatedRoute } from '@angular/router';\n// import { UsersService } from 'src/app/services/users.service';\n// import { Router } from '@angular/router';\n// import { FormControl, FormGroup, Validators } from '@angular/forms';\n// @Component({\n//   selector: 'app-update-user',\n//   templateUrl: './update-user.component.html',\n//   styles: [\n//   ]\n// })\n// export class UpdateUserComponent implements OnInit {\n//   // initialValue = {\n//   //   name:,\n//   //   email:,\n//   //   phone:,\n//   //   street:,\n//   //   suite:,\n//   //   city:\n//   // };\n//   ID:any;\n//   user:any;\n//   // @Input() student:any;\n//   constructor(myRoute:ActivatedRoute,public UService: UsersService, public router:Router){\n//     this.ID = myRoute.snapshot.params[\"id\"];\n//     // console.log(myRoute.snapshot.params[\"id\"]);\n//   }\n//   ngOnInit(): void {\n//     this.UService.GetUserByID(this.ID).subscribe({\n//       next:(data)=>{\n//         // console.log(data)\n//         this.user = data;\n//       },\n//       error:(err)=>{console.log(err)}\n//     });\n//   }\n//   update(name:any, email:any, phone:any, street:any,suite:any, city:any,e:any){\n//     // console.log(e);\n//     let address={street,suite,city};\n//     let newUser = {name, email, phone, address};\n//       this.UService.UpdateUser( this.ID,newUser).subscribe();\n//       this.router.navigateByUrl(\"/users\")\n//   }\n//   }","map":{"version":3,"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AAGA","names":[],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\update-user\\update-user.component.ts"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\n// import { ActivatedRoute } from '@angular/router';\n// import { UsersService } from 'src/app/services/users.service';\n// import { Router } from '@angular/router';\n// import { FormControl, FormGroup, Validators } from '@angular/forms';\n\n// @Component({\n//   selector: 'app-update-user',\n//   templateUrl: './update-user.component.html',\n//   styles: [\n//   ]\n// })\n// export class UpdateUserComponent implements OnInit {\n//   // initialValue = {\n//   //   name:,\n//   //   email:,\n//   //   phone:,\n//   //   street:,\n//   //   suite:,\n//   //   city:\n//   // };\n  \n  \n//   ID:any;\n//   user:any;\n//   // @Input() student:any;\n//   constructor(myRoute:ActivatedRoute,public UService: UsersService, public router:Router){\n//     this.ID = myRoute.snapshot.params[\"id\"];\n\n//     // console.log(myRoute.snapshot.params[\"id\"]);\n\n    \n//   }\n \n//   ngOnInit(): void {\n\n//     this.UService.GetUserByID(this.ID).subscribe({\n//       next:(data)=>{\n//         // console.log(data)\n//         this.user = data;\n//       },\n//       error:(err)=>{console.log(err)}\n//     });\n\n//   }\n  \n//   update(name:any, email:any, phone:any, street:any,suite:any, city:any,e:any){\n//     // console.log(e);\n    \n//     let address={street,suite,city};\n//     let newUser = {name, email, phone, address};\n//     if(this.myValidation.valid){\n\n//       this.UService.UpdateUser( this.ID,newUser).subscribe();\n//       this.router.navigateByUrl(\"/users\")\n//       }\n      \n//   }\n  \n//   myValidation=new FormGroup({\n    \n//     name:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n//     email:new FormControl(\"\",[Validators.required,Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n//     phone:new FormControl(\"\",[Validators.required,Validators.pattern( /^[0-9]+$/)]),\n//     street:new FormControl(\"\",Validators.required),\n//     suite:new FormControl(\"\",Validators.required),\n//     city:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n    \n    \n  \n//   })\n//   get NameValid(){\n//     if((this.myValidation.controls[\"name\"].value!==\"\")){\n      \n//       return ((this.myValidation.controls[\"name\"].valid))\n     \n//     }\n//      return true\n//   }\n//   get PhoneValid(){\n//     if((this.myValidation.controls[\"phone\"].value!==\"\")){\n      \n//       return ((this.myValidation.controls[\"phone\"].valid))\n     \n//     }\n//      return true\n//   }\n//   get MailValid(){\n//     if((this.myValidation.controls[\"email\"].value!==\"\")){\n      \n//       return ((this.myValidation.controls[\"email\"].valid))\n     \n//     }\n//      return true\n//   }\n//   get StreetValid(){\n//     if((this.myValidation.controls[\"street\"].value!==\"\")){\n      \n//       return ((this.myValidation.controls[\"street\"].valid))\n     \n//     }\n//      return true\n//   }\n//   get SuiteValid(){\n//     if((this.myValidation.controls[\"suite\"].value!==\"\")){\n      \n//       return ((this.myValidation.controls[\"suite\"].valid))\n     \n//     }\n//      return true\n//   }\n//   get CityValid(){\n//     if((this.myValidation.controls[\"city\"].value!==\"\")){\n      \n//       return ((this.myValidation.controls[\"city\"].valid))\n     \n//     }\n//      return true}\n  \n//   }\n\n// import { Component, OnInit } from '@angular/core';\n// import { ActivatedRoute } from '@angular/router';\n// import { UsersService } from 'src/app/services/users.service';\n// import { Router } from '@angular/router';\n// import { FormControl, FormGroup, Validators } from '@angular/forms';\n\n// @Component({\n//   selector: 'app-update-user',\n//   templateUrl: './update-user.component.html',\n//   styles: [\n//   ]\n// })\n// export class UpdateUserComponent implements OnInit {\n//   // initialValue = {\n//   //   name:,\n//   //   email:,\n//   //   phone:,\n//   //   street:,\n//   //   suite:,\n//   //   city:\n//   // };\n  \n  \n//   ID:any;\n//   user:any;\n//   // @Input() student:any;\n//   constructor(myRoute:ActivatedRoute,public UService: UsersService, public router:Router){\n//     this.ID = myRoute.snapshot.params[\"id\"];\n\n//     // console.log(myRoute.snapshot.params[\"id\"]);\n\n    \n//   }\n \n//   ngOnInit(): void {\n\n//     this.UService.GetUserByID(this.ID).subscribe({\n//       next:(data)=>{\n//         // console.log(data)\n//         this.user = data;\n//       },\n//       error:(err)=>{console.log(err)}\n//     });\n\n//   }\n  \n//   update(name:any, email:any, phone:any, street:any,suite:any, city:any,e:any){\n//     // console.log(e);\n    \n//     let address={street,suite,city};\n//     let newUser = {name, email, phone, address};\n\n//       this.UService.UpdateUser( this.ID,newUser).subscribe();\n//       this.router.navigateByUrl(\"/users\")\n  \n      \n//   }\n  \n\n//   }\n\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}