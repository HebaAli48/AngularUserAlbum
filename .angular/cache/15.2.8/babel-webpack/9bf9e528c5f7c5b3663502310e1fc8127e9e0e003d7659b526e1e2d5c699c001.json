{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/users.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddNewUserComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" User Name not valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewUserComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Email is Required and match it's pattern\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewUserComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Phone is Required and must be Numbers only\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewUserComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Street is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewUserComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Suite is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewUserComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" City is Required and must be characters only\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddNewUserComponent {\n  constructor(UService, router) {\n    this.UService = UService;\n    this.router = router;\n    this.myValidation = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n      email: new FormControl('', [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n      phone: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n      street: new FormControl('', Validators.required),\n      suite: new FormControl('', Validators.required),\n      city: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n    });\n  }\n  ngOnInit() {\n    this.UService.GetAllUsers().subscribe({\n      next: data => {\n        // console.log(data)\n        this.users = data;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  add(name, email, phone, street, suite, city) {\n    // console.log(this.users);\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      name,\n      email,\n      phone,\n      address\n    };\n    if (this.myValidation.valid) {\n      // this.myEvent.emit(newUser)\n      // this.users.push(newUser);\n      this.UService.AddUser(newUser).subscribe();\n      this.router.navigateByUrl('/users');\n    }\n  }\n  get NameValid() {\n    if (this.myValidation.controls['name'].value !== '') {\n      return this.myValidation.controls['name'].valid;\n    }\n    return true;\n  }\n  get PhoneValid() {\n    if (this.myValidation.controls['phone'].value !== '') {\n      return this.myValidation.controls['phone'].valid;\n    }\n    return true;\n  }\n  get MailValid() {\n    if (this.myValidation.controls['email'].value !== '') {\n      return this.myValidation.controls['email'].valid;\n    }\n    return true;\n  }\n  get StreetValid() {\n    if (this.myValidation.controls['street'].value !== '') {\n      return this.myValidation.controls['street'].valid;\n    }\n    return true;\n  }\n  get SuiteValid() {\n    if (this.myValidation.controls['suite'].value !== '') {\n      return this.myValidation.controls['suite'].valid;\n    }\n    return true;\n  }\n  get CityValid() {\n    if (this.myValidation.controls['city'].value !== '') {\n      return this.myValidation.controls['city'].valid;\n    }\n    return true;\n  }\n}\nAddNewUserComponent.ɵfac = function AddNewUserComponent_Factory(t) {\n  return new (t || AddNewUserComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAddNewUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddNewUserComponent,\n  selectors: [[\"app-add-new-user\"]],\n  decls: 42,\n  vars: 7,\n  consts: [[1, \"ms-5\", \"me-5\", \"m-auto\", \"mb-5\", \"mt-3\", 2, \"opacity\", \"50%\"], [1, \"card\", \"w-75\", \"m-auto\", \"mt-5\"], [1, \"card-header\", \"text-center\", \"fs-4\"], [1, \"card-body\"], [1, \"row\"], [1, \"col\"], [1, \"form\", 3, \"formGroup\"], [1, \"form-group\", \"d-flex\", \"mt-2\"], [\"for\", \"name\", 1, \"col-3\"], [\"formControlName\", \"name\", \"id\", \"name\", \"type\", \"text\", 1, \"form-control\"], [\"name\", \"\"], [\"class\", \"text-center\", \"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"col-3\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"text\", 1, \"form-control\"], [\"email\", \"\"], [\"for\", \"phone\", 1, \"col-3\"], [\"formControlName\", \"phone\", \"id\", \"phone\", \"type\", \"text\", 1, \"form-control\"], [\"phone\", \"\"], [\"for\", \"address\", 1, \"col-3\"], [\"formControlName\", \"street\", \"id\", \"street\", \"type\", \"text\", \"placeholder\", \"street\", 1, \"form-control\"], [\"street\", \"\"], [\"formControlName\", \"suite\", \"id\", \"suite\", \"type\", \"text\", \"placeholder\", \"suite\", 1, \"form-control\"], [\"suite\", \"\"], [\"formControlName\", \"city\", \"id\", \"city\", \"type\", \"text\", \"placeholder\", \"city\", 1, \"form-control\"], [\"city\", \"\"], [1, \"form-group\", \"text-center\", \"mt-4\", \"d-flex\", \"justify-content-evenly\"], [\"type\", \"button\", \"value\", \"ADD\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [\"type\", \"button\", \"value\", \"Cancel\", \"routerLink\", \"/users\", 1, \"btn\", \"btn-outline-success\"], [1, \"text-center\", 2, \"color\", \"red\"]],\n  template: function AddNewUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r12 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-header\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n      i0.ɵɵtext(4, \" Add User \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"form\", 6)(9, \"div\", 7)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9, 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, AddNewUserComponent_div_14_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\", 12);\n      i0.ɵɵtext(17, \"Email-Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 13, 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, AddNewUserComponent_div_20_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(21, \"div\", 7)(22, \"label\", 15);\n      i0.ɵɵtext(23, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 16, 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(26, AddNewUserComponent_div_26_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(27, \"div\", 7)(28, \"label\", 18);\n      i0.ɵɵtext(29, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 19, 20)(32, \"input\", 21, 22)(34, \"input\", 23, 24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(36, AddNewUserComponent_div_36_Template, 2, 0, \"div\", 11);\n      i0.ɵɵtemplate(37, AddNewUserComponent_div_37_Template, 2, 0, \"div\", 11);\n      i0.ɵɵtemplate(38, AddNewUserComponent_div_38_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(39, \"div\", 25)(40, \"input\", 26);\n      i0.ɵɵlistener(\"click\", function AddNewUserComponent_Template_input_click_40_listener() {\n        i0.ɵɵrestoreView(_r12);\n        const _r0 = i0.ɵɵreference(13);\n        const _r2 = i0.ɵɵreference(19);\n        const _r4 = i0.ɵɵreference(25);\n        const _r6 = i0.ɵɵreference(31);\n        const _r7 = i0.ɵɵreference(33);\n        const _r8 = i0.ɵɵreference(35);\n        return i0.ɵɵresetView(ctx.add(_r0.value, _r2.value, _r4.value, _r6.value, _r7.value, _r8.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"input\", 27);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.myValidation);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.NameValid == false);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.MailValid == false);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.PhoneValid == false);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.StreetValid == false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.SuiteValid == false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.CityValid == false);\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","AddNewUserComponent","constructor","UService","router","name","required","pattern","email","phone","street","suite","city","ngOnInit","GetAllUsers","subscribe","next","data","users","error","err","console","log","add","address","newUser","myValidation","valid","AddUser","navigateByUrl","NameValid","controls","value","PhoneValid","MailValid","StreetValid","SuiteValid","CityValid","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\add-new-user\\add-new-user.component.ts","D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\add-new-user\\add-new-user.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-add-new-user',\r\n  templateUrl: './add-new-user.component.html',\r\n  styles: [],\r\n})\r\nexport class AddNewUserComponent implements OnInit {\r\n  constructor(public UService: UsersService, public router: Router) {}\r\n\r\n  // <input type=\"button\" (click)=\"add(name.value, email.value, phone.value,street.value,suite.value,city.value)\" value=\"ADD\" class=\"btn btn-outline-success\" />\r\n  users: any;\r\n  ngOnInit(): void {\r\n    this.UService.GetAllUsers().subscribe({\r\n      next: (data) => {\r\n        // console.log(data)\r\n        this.users = data;\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  add(name: any, email: any, phone: any, street: any, suite: any, city: any) {\r\n    // console.log(this.users);\r\n\r\n    let address = { street, suite, city };\r\n    let newUser = { name, email, phone, address };\r\n    if (this.myValidation.valid) {\r\n      // this.myEvent.emit(newUser)\r\n      // this.users.push(newUser);\r\n      this.UService. AddUser(newUser).subscribe();\r\n      this.router.navigateByUrl('/users');\r\n    }\r\n  }\r\n  myValidation = new FormGroup({\r\n    name: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/[a-zA-Z]+/),\r\n    ]),\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/),\r\n    ]),\r\n    phone: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^[0-9]+$/),\r\n    ]),\r\n    street: new FormControl('', Validators.required),\r\n    suite: new FormControl('', Validators.required),\r\n    city: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/[a-zA-Z]+/),\r\n    ]),\r\n  });\r\n  get NameValid() {\r\n    if (this.myValidation.controls['name'].value !== '') {\r\n      return this.myValidation.controls['name'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get PhoneValid() {\r\n    if (this.myValidation.controls['phone'].value !== '') {\r\n      return this.myValidation.controls['phone'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get MailValid() {\r\n    if (this.myValidation.controls['email'].value !== '') {\r\n      return this.myValidation.controls['email'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get StreetValid() {\r\n    if (this.myValidation.controls['street'].value !== '') {\r\n      return this.myValidation.controls['street'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get SuiteValid() {\r\n    if (this.myValidation.controls['suite'].value !== '') {\r\n      return this.myValidation.controls['suite'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get CityValid() {\r\n    if (this.myValidation.controls['city'].value !== '') {\r\n      return this.myValidation.controls['city'].valid;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","<!-- <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <form class=\"form\">\r\n          <div class=\"form-group d-flex mt-2\">\r\n            <label for=\"name\" class=\"col-3\">Name</label>\r\n            <input #name id=\"name\" type=\"text\" class=\"form-control\" />\r\n          </div>\r\n          <div class=\"form-group d-flex mt-2\">\r\n            <label for=\"email\" class=\"col-3\">Email-Address</label>\r\n            <input #email id=\"email\" type=\"text\" class=\"form-control\" />\r\n          </div>\r\n          <div class=\"form-group d-flex mt-2\">\r\n            <label for=\"phone\" class=\"col-3\">Phone</label>\r\n            <input #phone id=\"phone\" type=\"text\" class=\"form-control\" />\r\n          </div>\r\n          <div class=\"form-group d-flex mt-2\">\r\n            <label for=\"address\" class=\"col-3\">Address</label>\r\n            <input #street id=\"street\" type=\"text\" class=\"form-control\"  placeholder=\"street\"/>\r\n            <input #suite id=\"suite\" type=\"text\" class=\"form-control\"  placeholder=\"suite\"/>\r\n            <input #city id=\"city\" type=\"text\" class=\"form-control\"  placeholder=\"city\"/>\r\n          </div>\r\n          <div class=\"form-group text-center mt-2\">\r\n            <input type=\"button\" (click)=\"add(name.value, email.value, phone.value,street.value,suite.value,city.value)\" value=\"ADD\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" class=\"btn btn-outline-success\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n  <div class=\"   ms-5 me-5  m-auto mb-5 mt-3\" style=\"opacity: 50%;\">\r\n    <app-header></app-header>\r\n  </div>\r\n  \r\n\r\n   <div class=\"card w-75 m-auto mt-5\">\r\n    <div class=\"card-header text-center fs-4\">\r\n      Add User\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <form [formGroup]=\"myValidation\" class=\"form\">\r\n            <div class=\"form-group d-flex mt-2\">\r\n              <label for=\"name\" class=\"col-3\">Name</label>\r\n              <input  formControlName=\"name\" #name id=\"name\" type=\"text\" class=\"form-control\"/>\r\n            </div>\r\n            <div class=\"text-center\"  *ngIf=\"NameValid ==false\" style=\"color: red;\"> User Name not valid</div>\r\n\r\n            <div class=\"form-group d-flex mt-2\">\r\n              <label for=\"email\" class=\"col-3\">Email-Address</label>\r\n              <input formControlName=\"email\" #email id=\"email\" type=\"text\" class=\"form-control\"  />\r\n            </div>\r\n            <div class=\"text-center\" *ngIf=\" MailValid==false\" style=\"color: red;\"> Email is Required and match it's pattern</div>\r\n\r\n            <div class=\"form-group d-flex mt-2\">\r\n              <label for=\"phone\" class=\"col-3\">Phone</label>\r\n              <input formControlName=\"phone\" #phone id=\"phone\" type=\"text\" class=\"form-control\"  />\r\n            </div>\r\n            <div class=\"text-center\" *ngIf=\"PhoneValid==false\" style=\"color: red;\"> Phone is Required and must be Numbers only</div>\r\n\r\n            <div class=\"form-group d-flex mt-2\">\r\n              <label for=\"address\" class=\"col-3\">Address</label>\r\n              <input formControlName=\"street\" #street id=\"street\" type=\"text\" class=\"form-control\"  placeholder=\"street\"   />\r\n              <input formControlName=\"suite\" #suite id=\"suite\" type=\"text\" class=\"form-control\"  placeholder=\"suite\"  />\r\n              <input formControlName=\"city\" #city id=\"city\" type=\"text\" class=\"form-control\"  placeholder=\"city\"   />\r\n            </div>\r\n            <div class=\"text-center\" *ngIf=\"StreetValid==false\" style=\"color: red;\">  Street is Required</div>\r\n            <div class=\"text-center\" *ngIf=\"SuiteValid==false\" style=\"color: red;\">  Suite is Required</div>\r\n            <div class=\"text-center\" *ngIf=\"CityValid==false\" style=\"color: red;\"> City is Required and must be characters only</div>\r\n  \r\n           \r\n            <div class=\"form-group text-center mt-4 d-flex justify-content-evenly\">\r\n              <input type=\"button\" (click)=\"add(name.value, email.value, phone.value,street.value,suite.value,city.value)\" value=\"ADD\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" class=\"btn btn-outline-success\" />\r\n              <input type=\"button\"  class=\"btn btn-outline-success\" value=\"Cancel\" routerLink=\"/users\"/>\r\n  \r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}