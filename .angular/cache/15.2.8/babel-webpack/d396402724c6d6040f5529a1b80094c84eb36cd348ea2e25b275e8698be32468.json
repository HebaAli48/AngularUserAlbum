{"ast":null,"code":"import { FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(formBuilder, http, router) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.myValidation = new FormGroup({\n      name: new FormControl(\"\", [Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n      email: new FormControl(\"\", [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n      phone: new FormControl(\"\", [Validators.required, Validators.pattern(/^[0-9]+$/)]),\n      street: new FormControl(\"\", Validators.required),\n      suite: new FormControl(\"\", Validators.required),\n      city: new FormControl(\"\", [Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n    });\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      name: [''],\n      email: ['']\n    });\n  }\n  login() {\n    this.http.get(\"http://localhost:3000/users\").subscribe(res => {\n      const user = res.find(a => {\n        return a.name === this.loginForm.value.name && a.email === this.loginForm.value.email;\n      });\n      console.log(user);\n      if (user) {\n        alert(\"Login Success !!\");\n        this.loginForm.reset();\n        this.router.navigate(['users']);\n      } else {\n        alert(\"User Not Found !! please signup\");\n        this.router.navigateByUrl(\"/register\");\n      }\n    }, err => {\n      alert(\"Something Went Wrong !!\");\n    });\n  }\n  onSubmit(form) {\n    const user = {\n      name: form.value.name,\n      email: form.value.email\n    };\n    this.http.get('http://localhost:3000/users').subscribe(res => {\n      console.log(res);\n      form.reset();\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"card\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleInputName\", 1, \"form-label\"], [\"formControlName\", \"name\", \"type\", \"text\", \"id\", \"exampleInputName\", 1, \"form-control\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [\"id\", \"emailHelp\", 1, \"form-text\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mb-2\"], [\"routerLink\", \"/signup\", 2, \"color\", \"aliceblue\", \"margin-top\", \"10px\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\");\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"form\")(8, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 6)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵelementStart(17, \"div\", 11);\n      i0.ɵɵtext(18, \"We'll never share your email with anyone else.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"button\", 12);\n      i0.ɵɵtext(20, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"a\", 13);\n      i0.ɵɵtext(22, \"New User ? Please Click To Sign Up\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgForm, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".card[_ngcontent-%COMP%] {\\r\\nborder: none;\\r\\nwidth: 500px;\\r\\npadding: 40px;\\r\\nposition: absolute ;\\r\\ntop: 50%;\\r\\nleft: 50%;\\r\\ntransform: translate(-50%,-50%);\\r\\nbackground: hsla(205, 46%, 30%, 1);\\r\\nbackground: linear-gradient(90deg, hsla(205, 46%, 30%, 1)0%, hsla(260,29%,36%,1)100%);\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], h6[_ngcontent-%COMP%] {\\r\\n  color :aliceblue;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%]{\\r\\ncolor: aliceblue;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsWUFBWTtBQUNaLFlBQVk7QUFDWixhQUFhO0FBQ2IsbUJBQW1CO0FBQ25CLFFBQVE7QUFDUixTQUFTO0FBQ1QsK0JBQStCO0FBQy9CLGtDQUFrQztBQUNsQyxxRkFBcUY7QUFDckY7O0FBRUE7O0VBRUUsZ0JBQWdCO0FBQ2xCOztBQUVBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7O0dBRUciLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XHJcbmJvcmRlcjogbm9uZTtcclxud2lkdGg6IDUwMHB4O1xyXG5wYWRkaW5nOiA0MHB4O1xyXG5wb3NpdGlvbjogYWJzb2x1dGUgO1xyXG50b3A6IDUwJTtcclxubGVmdDogNTAlO1xyXG50cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpO1xyXG5iYWNrZ3JvdW5kOiBoc2xhKDIwNSwgNDYlLCAzMCUsIDEpO1xyXG5iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIGhzbGEoMjA1LCA0NiUsIDMwJSwgMSkwJSwgaHNsYSgyNjAsMjklLDM2JSwxKTEwMCUpO1xyXG59XHJcblxyXG4uY2FyZCBoMSAsXHJcbmg2IHtcclxuICBjb2xvciA6YWxpY2VibHVlO1xyXG59XHJcblxyXG5sYWJlbHtcclxuY29sb3I6IGFsaWNlYmx1ZTtcclxufVxyXG4vKiAuY29udGFpbmVye1xyXG4gICAgbWFyZ2luLXRvcDogNTAwcHg7XHJcbn0gKi8iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","LoginComponent","constructor","formBuilder","http","router","name","FormControl","Validators","required","pattern","email","phone","street","suite","city","ngOnInit","loginForm","group","login","get","subscribe","res","user","find","a","value","console","log","alert","reset","navigate","navigateByUrl","err","onSubmit","form","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\login\\login.component.ts","D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { style } from '@angular/animations';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  public loginForm !: FormGroup;\n  constructor (private formBuilder : FormBuilder, private http : HttpClient, private router : Router){}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      name : [''],\n      email : ['']\n    })\n  }\n\n  login(){\n    this.http.get<any>(\"http://localhost:3000/users\")\n    .subscribe(res=>{\n      const user = res.find((a:any)=>{\n        return a.name === this.loginForm.value.name &&  a.email === this.loginForm.value.email\n      })\n      console.log(user);\n      \n      if(user){\n        alert (\"Login Success !!\");\n        this.loginForm.reset();\n        this.router.navigate(['users'])\n      } \n      else{\n\n        alert (\"User Not Found !! please signup\");\n        this.router.navigateByUrl(\"/register\")\n\n      }\n    },err=>{\n      alert (\"Something Went Wrong !!\")\n    })\n  }\n\n  onSubmit(form: NgForm) {\n    const user = {\n      name: form.value.name,\n      email: form.value.email,\n    };\n    this.http.get('http://localhost:3000/users')\n      .subscribe(res => {\n        console.log(res);\n        form.reset();\n      });\n  }\n  myValidation=new FormGroup({\n    name:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n    email:new FormControl(\"\",[Validators.required,Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n    phone:new FormControl(\"\",[Validators.required,Validators.pattern( /^[0-9]+$/)]),\n    street:new FormControl(\"\",Validators.required),\n    suite:new FormControl(\"\",Validators.required),\n    city:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n  \n  })\n}\n","<div class=\"container\">\n  <div class=\"row\">\n  <div class=\"col-md-3\">\n  <div class=\"card\">\n  <div class=\"text-center\">\n  <h1>Login</h1>\n  </div>\n  <form>\n    <form  [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n      <div class=\"mb-3\">\n        <label for=\"exampleInputName\" class=\"form-label\">Name</label>\n        <input formControlName=\"name\" type=\"text\" class=\"form-control\" id=\"exampleInputName\" >\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n        <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"  >\n        <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n      </div>\n  \n      <button type=\"submit\" class=\"btn btn-primary mb-2\">Login</button>\n  \n    </form>\n    <a routerLink=\"/signup\" style=\"color: aliceblue; margin-top: 10px;\">New User ? Please Click To Sign Up</a>\n  </form>\n  </div>\n  </div>\n  </div>\n  </div>\n\n\n    <!-- <form>\n      <form  [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n        <div class=\"mb-3\">\n          <label for=\"exampleInputName\" class=\"form-label\">Name</label>\n          <input formControlName=\"name\" type=\"text\" class=\"form-control\" id=\"exampleInputName\">\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n          <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n          <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n        </div>\n    \n        <button type=\"submit\" class=\"btn btn-primary mb-2\">Login</button>\n    \n      </form>\n      <a routerLink=\"/signup\" style=\"color: aliceblue; margin-top: 10px;\">New User ? Please Click To Sign Up</a>\n    </form> -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}