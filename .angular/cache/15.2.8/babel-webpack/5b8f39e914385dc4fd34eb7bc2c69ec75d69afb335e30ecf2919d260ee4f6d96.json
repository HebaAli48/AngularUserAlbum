{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction RegisterComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" User Name not valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Email is Required and match it's pattern\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Phone is Required and must be Numbers only\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Street is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Suite is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" City is Required and must be characters only\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(DService, formBuilder, http, router) {\n    this.DService = DService;\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.myValidation = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n      email: new FormControl('', [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n      phone: new FormControl('', Validators.required),\n      street: new FormControl('', Validators.required),\n      suite: new FormControl('', Validators.required),\n      city: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n    });\n  }\n  ngOnInit() {}\n  add(name, email, phone, street, suite, city) {\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      name,\n      email,\n      phone,\n      address\n    };\n    this.http.get('https://jsonplaceholder.typicode.com/users').subscribe(res => {\n      const user = res.find(a => {\n        return a.name === this.myValidation.value.name && a.email === this.myValidation.value.email;\n      });\n      if (user) {\n        alert('user is already exists ,please login Again');\n        this.router.navigateByUrl('/login');\n      } else if (this.myValidation.value.name == \"heba\" && this.myValidation.value.email == \"heba@gmail.com\") {\n        alert('user is already exists ,please login Again');\n        this.router.navigateByUrl('/login');\n      } else {\n        if (this.myValidation.valid) {\n          alert('welcome New User  !! please sign in');\n          this.DService.userData = {\n            name: newUser.name,\n            email: newUser.email,\n            phone: newUser.phone,\n            address: {\n              street: newUser.address.street,\n              suite: newUser.address.suite,\n              city: newUser.address.city\n            }\n          };\n          this.router.navigateByUrl('/login');\n        }\n        // console.log(newUser);\n        //   console.log(this.DService.userData);\n      }\n    }, err => {\n      alert('Something Went Wrong !!');\n    });\n  }\n  get NameValid() {\n    if (this.myValidation.controls['name'].value !== '') {\n      return this.myValidation.controls['name'].valid;\n    }\n    return true;\n  }\n  get PhoneValid() {\n    if (this.myValidation.controls['phone'].value !== '') {\n      return this.myValidation.controls['phone'].valid;\n    }\n    return true;\n  }\n  get MailValid() {\n    if (this.myValidation.controls['email'].value !== '') {\n      return this.myValidation.controls['email'].valid;\n    }\n    return true;\n  }\n  get StreetValid() {\n    if (this.myValidation.controls['street'].value !== '') {\n      return this.myValidation.controls['street'].valid;\n    }\n    return true;\n  }\n  get SuiteValid() {\n    if (this.myValidation.controls['suite'].value !== '') {\n      return this.myValidation.controls['suite'].valid;\n    }\n    return true;\n  }\n  get CityValid() {\n    if (this.myValidation.controls['city'].value !== '') {\n      return this.myValidation.controls['city'].valid;\n    }\n    return true;\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 48,\n  vars: 7,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"card\"], [1, \"text-center\"], [\"src\", \"assets/images/reg.svg\", 1, \"fixed\", 2, \"width\", \"100px\"], [1, \"form\", \"lh-1\", 3, \"formGroup\"], [1, \"form-group\", \"d-flex\", \"mb-3\"], [\"for\", \"name\", 1, \"form-label\", \"col-3\"], [\"formControlName\", \"name\", \"id\", \"name\", \"type\", \"text\", \"placeholder\", \"Name *\", 1, \"form-control\"], [\"name\", \"\"], [\"class\", \"text-center mt-1 mb-1\", \"style\", \"color: rgb(255, 88, 88); text-shadow: 0px 0px 2px rgb(0, 0, 0);\", 4, \"ngIf\"], [1, \"form-group\", \"d-flex\", \"mt-3\"], [\"for\", \"email\", 1, \"form-label\", \"col-3\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"email\", \"placeholder\", \"example@example.com *\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [\"email\", \"\"], [\"id\", \"emailHelp\", 1, \"form-text\", \"mt-2\", 2, \"margin-left\", \"120px\"], [\"for\", \"phone\", 1, \"form-label\", \"col-3\"], [\"formControlName\", \"phone\", \"id\", \"phone\", \"placeholder\", \"Phone *\", \"type\", \"text\", \"id\", \"exampleInputPhone\", 1, \"form-control\"], [\"phone\", \"\"], [\"for\", \"address\", 1, \"col-3\"], [\"formControlName\", \"street\", \"id\", \"street\", \"type\", \"text\", \"placeholder\", \"street *\", 1, \"form-control\"], [\"street\", \"\"], [\"formControlName\", \"suite\", \"id\", \"suite\", \"type\", \"text\", \"placeholder\", \"suite *\", 1, \"form-control\"], [\"suite\", \"\"], [\"formControlName\", \"city\", \"id\", \"city\", \"type\", \"text\", \"placeholder\", \"city *\", 1, \"form-control\"], [\"city\", \"\"], [1, \"form-group\", \"text-center\", \"mt-4\"], [\"type\", \"submit\", \"value\", \"Register\", 1, \"btn\", \"btn-primary\", \"mb-2\", \"me-3\", 3, \"click\"], [\"routerLink\", \"/login\", 2, \"color\", \"aliceblue\", \"margin-top\", \"10px\"], [1, \"text-center\", \"mt-1\", \"mb-1\", 2, \"color\", \"rgb(255, 88, 88)\", \"text-shadow\", \"0px 0px 2px rgb(0, 0, 0)\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r12 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵelement(5, \"img\", 5);\n      i0.ɵɵelementStart(6, \"h1\");\n      i0.ɵɵtext(7, \"Sign Up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"h6\");\n      i0.ɵɵtext(9, \"Register yourself !!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"form\", 6)(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9, 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, RegisterComponent_div_16_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(17, \"div\", 12)(18, \"label\", 13);\n      i0.ɵɵtext(19, \"Email-Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 14, 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 16);\n      i0.ɵɵtext(23, \"We'll never share your email with anyone else.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, RegisterComponent_div_24_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(25, \"div\", 12)(26, \"label\", 17);\n      i0.ɵɵtext(27, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 18, 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, RegisterComponent_div_30_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(31, \"div\", 12)(32, \"label\", 20);\n      i0.ɵɵtext(33, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"input\", 21, 22)(36, \"input\", 23, 24)(38, \"input\", 25, 26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(40, RegisterComponent_div_40_Template, 2, 0, \"div\", 11);\n      i0.ɵɵtemplate(41, RegisterComponent_div_41_Template, 2, 0, \"div\", 11);\n      i0.ɵɵtemplate(42, RegisterComponent_div_42_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(43, \"div\", 27)(44, \"input\", 28);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_input_click_44_listener() {\n        i0.ɵɵrestoreView(_r12);\n        const _r0 = i0.ɵɵreference(15);\n        const _r2 = i0.ɵɵreference(21);\n        const _r4 = i0.ɵɵreference(29);\n        const _r6 = i0.ɵɵreference(35);\n        const _r7 = i0.ɵɵreference(37);\n        const _r8 = i0.ɵɵreference(39);\n        return i0.ɵɵresetView(ctx.add(_r0.value, _r2.value, _r4.value, _r6.value, _r7.value, _r8.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\")(46, \"a\", 29);\n      i0.ɵɵtext(47, \"Already registered ? Please Click To Login\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.myValidation);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.NameValid == false);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.MailValid == false);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.PhoneValid == false);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.StreetValid == false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.SuiteValid == false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.CityValid == false);\n    }\n  },\n  dependencies: [i5.NgIf, i4.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".card[_ngcontent-%COMP%] {\\r\\n  border: none;\\r\\n  border-radius: 30%;\\r\\n  width: 500px;\\r\\n  padding: 40px;\\r\\n  position: absolute ;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  transform: translate(-50%,-50%);\\r\\n  background: rgb(215,219,221);\\r\\nbackground: linear-gradient(90deg, rgba(215,219,221,1) 0%, rgba(0,151,255,1) 100%);\\r\\n  \\r\\n  }\\r\\n\\r\\n  .card[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], h6[_ngcontent-%COMP%] {\\r\\n    color :aliceblue;\\r\\n  }\\r\\n\\r\\n  label[_ngcontent-%COMP%]{\\r\\n  color: aliceblue;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixRQUFRO0VBQ1IsU0FBUztFQUNULCtCQUErQjtFQUMvQiw0QkFBNEI7QUFDOUIsa0ZBQWtGO0VBQ2hGOzBGQUN3RjtFQUN4Rjs7RUFFQTs7SUFFRSxnQkFBZ0I7RUFDbEI7O0VBRUE7RUFDQSxnQkFBZ0I7RUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDMwJTtcclxuICB3aWR0aDogNTAwcHg7XHJcbiAgcGFkZGluZzogNDBweDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGUgO1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpO1xyXG4gIGJhY2tncm91bmQ6IHJnYigyMTUsMjE5LDIyMSk7XHJcbmJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSgyMTUsMjE5LDIyMSwxKSAwJSwgcmdiYSgwLDE1MSwyNTUsMSkgMTAwJSk7XHJcbiAgLyogYmFja2dyb3VuZDogaHNsYSgyMDUsIDQ2JSwgMzAlLCAxKTtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIGhzbGEoMjA1LCA0NiUsIDMwJSwgMSkwJSwgaHNsYSgyNjAsMjklLDM2JSwxKTEwMCUpOyAqL1xyXG4gIH1cclxuXHJcbiAgLmNhcmQgaDEgLFxyXG4gIGg2IHtcclxuICAgIGNvbG9yIDphbGljZWJsdWU7XHJcbiAgfVxyXG5cclxuICBsYWJlbHtcclxuICBjb2xvcjogYWxpY2VibHVlO1xyXG4gIH1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","RegisterComponent","constructor","DService","formBuilder","http","router","name","required","pattern","email","phone","street","suite","city","ngOnInit","add","address","newUser","get","subscribe","res","user","find","a","myValidation","value","alert","navigateByUrl","valid","userData","err","NameValid","controls","PhoneValid","MailValid","StreetValid","SuiteValid","CityValid","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\register\\register.component.ts","D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n  FormBuilder,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  constructor(\r\n    public DService: DataService,\r\n    private formBuilder : FormBuilder,\r\n    private http: HttpClient,\r\n    public router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  add(name: any, email: any, phone: any, street: any, suite: any, city: any) {\r\n    let address = { street, suite, city };\r\n    let newUser = { name, email, phone, address };\r\n\r\n    this.http.get<any>('https://jsonplaceholder.typicode.com/users').subscribe(\r\n      (res) => {\r\n        const user = res.find((a: any) => {\r\n          return (\r\n            a.name === this.myValidation.value.name &&\r\n            a.email === this.myValidation.value.email\r\n          );\r\n        });\r\n\r\n        if (user) {\r\n          \r\n          alert('user is already exists ,please login Again');\r\n          this.router.navigateByUrl('/login');\r\n        }\r\n        else if(this.myValidation.value.name==\"heba\"&&this.myValidation.value.email==\"heba@gmail.com\"){\r\n          alert('user is already exists ,please login Again');\r\n          this.router.navigateByUrl('/login');\r\n        }\r\n\r\n      \r\n        else {\r\n          \r\n          if (this.myValidation.valid) {\r\n            alert('welcome New User  !! please sign in');\r\n            this.DService.userData={\r\n              name:newUser.name,\r\n              email:newUser.email,\r\n              phone:newUser.phone,\r\n              address:{\r\n                street:newUser.address.street,\r\n                suite:newUser.address.suite,\r\n                city:newUser.address.city\r\n              }\r\n              };\r\n                this.router.navigateByUrl('/login');\r\n              \r\n            }\r\n\r\n         \r\n          // console.log(newUser);\r\n            \r\n          //   console.log(this.DService.userData);\r\n        }\r\n      },\r\n      (err) => {\r\n        alert('Something Went Wrong !!');\r\n      }\r\n    );\r\n  }\r\n  myValidation = new FormGroup({\r\n    name: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/[a-zA-Z]+/),\r\n    ]),\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/),\r\n    ]),\r\n    phone: new FormControl('',\r\n      Validators.required,\r\n),\r\n    street: new FormControl('', Validators.required),\r\n    suite: new FormControl('', Validators.required),\r\n    city: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/[a-zA-Z]+/),\r\n    ]),\r\n  });\r\n  get NameValid() {\r\n    if (this.myValidation.controls['name'].value !== '') {\r\n      return this.myValidation.controls['name'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get PhoneValid() {\r\n    if (this.myValidation.controls['phone'].value !== '') {\r\n      return this.myValidation.controls['phone'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get MailValid() {\r\n    if (this.myValidation.controls['email'].value !== '') {\r\n      return this.myValidation.controls['email'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get StreetValid() {\r\n    if (this.myValidation.controls['street'].value !== '') {\r\n      return this.myValidation.controls['street'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get SuiteValid() {\r\n    if (this.myValidation.controls['suite'].value !== '') {\r\n      return this.myValidation.controls['suite'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get CityValid() {\r\n    if (this.myValidation.controls['city'].value !== '') {\r\n      return this.myValidation.controls['city'].valid;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n      <div class=\"card\">\r\n        <div class=\"text-center\">\r\n          <img src=\"assets/images/reg.svg\" class=\"fixed\" style=\"width: 100px;\" >\r\n\r\n          <h1>Sign Up</h1>\r\n          <h6>Register yourself !!</h6>\r\n        </div>\r\n        <form  [formGroup]=\"myValidation\" class=\"form lh-1 \">\r\n          <div class=\"form-group d-flex  mb-3\">\r\n            <label for=\"name\" class=\"form-label col-3\">Name</label>\r\n            <input formControlName=\"name\" #name id=\"name\" type=\"text\" placeholder=\"Name *\" class=\"form-control\" />\r\n          </div>\r\n          <div class=\"text-center mt-1 mb-1\" *ngIf=\"NameValid ==false\" style=\"color: rgb(255, 88, 88); text-shadow: 0px 0px 2px rgb(0, 0, 0);\"> User Name not valid</div>\r\n\r\n          <div class=\"form-group d-flex mt-3\">\r\n            <label for=\"email\" class=\"form-label col-3\">Email-Address</label>\r\n            <input formControlName=\"email\" #email id=\"email\" type=\"email\" class=\"form-control\" placeholder=\"example@example.com *\" id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\" />\r\n\r\n          </div>\r\n          <div id=\"emailHelp\" class=\"form-text mt-2  \" style=\"margin-left: 120px;\">We'll never share your email with\r\n            anyone else.</div>\r\n            <div class=\"text-center mt-1 mb-1\" *ngIf=\" MailValid==false\" style=\"color: rgb(255, 88, 88); text-shadow: 0px 0px 2px rgb(0, 0, 0);\"> Email is Required and match it's pattern</div>\r\n\r\n          <div class=\"form-group d-flex mt-3\">\r\n            <label for=\"phone\" class=\"form-label col-3\">Phone</label>\r\n            <input formControlName=\"phone\" #phone id=\"phone\" placeholder=\"Phone *\" type=\"text\" class=\"form-control\" id=\"exampleInputPhone\" />\r\n          </div>\r\n          <div class=\"text-center mt-1 mb-1\"  *ngIf=\"PhoneValid==false\" style=\"color: rgb(255, 88, 88); text-shadow: 0px 0px 2px rgb(0, 0, 0);\"> Phone is Required and must be Numbers only</div>\r\n          <div class=\"form-group d-flex mt-3\">\r\n            <label for=\"address\" class=\"col-3\">Address</label>\r\n            <input formControlName=\"street\" #street id=\"street\" type=\"text\" class=\"form-control\" placeholder=\"street *\" />\r\n            <input formControlName=\"suite\" #suite id=\"suite\" type=\"text\" class=\"form-control\" placeholder=\"suite *\" />\r\n            <input formControlName=\"city\" #city id=\"city\" type=\"text\" class=\"form-control\" placeholder=\"city *\" />\r\n          </div>\r\n          <div class=\"text-center mt-1 mb-1\" *ngIf=\"StreetValid==false\" style=\"color: rgb(255, 88, 88); text-shadow: 0px 0px 2px rgb(0, 0, 0);\">  Street is Required</div>\r\n          <div class=\"text-center mt-1 mb-1\" *ngIf=\"SuiteValid==false\" style=\"color: rgb(255, 88, 88); text-shadow: 0px 0px 2px rgb(0, 0, 0);\">  Suite is Required</div>\r\n          <div class=\"text-center mt-1 mb-1\" *ngIf=\"CityValid==false\" style=\"color: rgb(255, 88, 88); text-shadow: 0px 0px 2px rgb(0, 0, 0);\"> City is Required and must be characters only</div>\r\n          <div class=\"form-group text-center mt-4\">\r\n            <input type=\"submit\" (click)=\"add(name.value, email.value, phone.value,street.value,suite.value,city.value)\"\r\n              value=\"Register\" class=\"btn btn-primary mb-2 me-3 \" />\r\n            <div >\r\n              <a routerLink=\"/login\" style=\"color: aliceblue; margin-top: 10px;\">Already registered ? Please Click To\r\n                Login</a>\r\n            </div>\r\n              \r\n\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}