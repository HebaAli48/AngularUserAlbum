{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(DService, formBuilder, http, router) {\n    this.DService = DService;\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      name: [''],\n      email: ['']\n    });\n    // console.log( this.DService.userData);\n  }\n\n  login() {\n    this.http.get(\"https://jsonplaceholder.typicode.com/users\").subscribe(res => {\n      const user = res.find(a => {\n        return a.name === this.loginForm.value.name && a.email === this.loginForm.value.email;\n      });\n      // console.log(user);\n      if (user) {\n        if (this.loginForm.value.name == \"Leanne Graham\" && this.loginForm.value.email == \"Sincere@april.biz\") {\n          alert(\"Login Success ... WELCOME ADMIN  ^_^\");\n          this.loginForm.reset();\n          this.router.navigate(['users']);\n        } else {\n          alert(\"Login Success !!\");\n          this.loginForm.reset();\n          this.router.navigate(['user']);\n        }\n      } else if (this.DService.userData) {\n        alert(\"Login Success !!\");\n        this.loginForm.reset();\n        this.router.navigate(['user']);\n      } else if (this.loginForm.value.name == \"\" || this.loginForm.value.email == \"\") {\n        alert(\" Name and email are required !! please login again\");\n        this.router.navigateByUrl(\"/login\");\n      } else if (this.loginForm.value.name == \"heba\" || this.loginForm.value.email == \"heba@gmail.com\") {\n        alert(\"Login Success .... WELCOME ADMIN HEBA^_^\");\n        this.loginForm.reset();\n        this.router.navigate(['users']);\n      } else {\n        alert(\"User Not Found !! please signup\");\n        this.router.navigateByUrl(\"/register\");\n      }\n    }, err => {\n      alert(\"Something Went Wrong !!\");\n    });\n  }\n  onSubmit(form) {\n    const user = {\n      name: form.value.name,\n      email: form.value.email\n    };\n    this.http.get('https://jsonplaceholder.typicode.com/users').subscribe(res => {\n      console.log(res);\n      form.reset();\n    });\n    // console.log( this.DService.userData);\n  }\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"card\"], [1, \"text-center\"], [\"src\", \"assets/images/login.png\", 2, \"width\", \"100px\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleInputName\", 1, \"form-label\"], [\"formControlName\", \"name\", \"type\", \"text\", \"id\", \"exampleInputName\", 1, \"form-control\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [\"id\", \"emailHelp\", 1, \"form-text\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mb-2\", \"me-3\"], [\"routerLink\", \"/register\", 2, \"color\", \"aliceblue\", \"margin-top\", \"10px\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵelement(5, \"img\", 5);\n      i0.ɵɵelementStart(6, \"h1\");\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 10);\n      i0.ɵɵtext(15, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 11);\n      i0.ɵɵelementStart(17, \"div\", 12);\n      i0.ɵɵtext(18, \"We'll never share your email with anyone else.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"button\", 13);\n      i0.ɵɵtext(20, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"a\", 14);\n      i0.ɵɵtext(22, \"New User ? Please Click To Sign Up\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i4.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".card[_ngcontent-%COMP%]  {\\r\\nborder: none;\\r\\nborder-radius: 30%;\\r\\nwidth: 500px;\\r\\npadding: 40px;\\r\\nposition: absolute ;\\r\\ntop: 50%;\\r\\nleft: 50%;\\r\\ntransform: translate(-50%,-50%);\\r\\n\\r\\n\\r\\nbackground: rgb(197,228,235);\\r\\nbackground: radial-gradient(circle, rgba(197,228,235,1) 0%, rgba(0,157,203,1) 100%);\\r\\n\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], h6[_ngcontent-%COMP%] {\\r\\n  color :aliceblue;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%]{\\r\\ncolor: aliceblue;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsWUFBWTtBQUNaLGtCQUFrQjtBQUNsQixZQUFZO0FBQ1osYUFBYTtBQUNiLG1CQUFtQjtBQUNuQixRQUFRO0FBQ1IsU0FBUztBQUNULCtCQUErQjtBQUMvQjs7OzRCQUc0Qjs7QUFFNUIsNEJBQTRCO0FBQzVCLG1GQUFtRjtBQUNuRjtxRkFDcUY7QUFDckY7cUZBQ3FGO0FBQ3JGO3dGQUN3RjtBQUN4Rjs7QUFFQTs7RUFFRSxnQkFBZ0I7QUFDbEI7O0FBRUE7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTs7R0FFRyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkICB7XHJcbmJvcmRlcjogbm9uZTtcclxuYm9yZGVyLXJhZGl1czogMzAlO1xyXG53aWR0aDogNTAwcHg7XHJcbnBhZGRpbmc6IDQwcHg7XHJcbnBvc2l0aW9uOiBhYnNvbHV0ZSA7XHJcbnRvcDogNTAlO1xyXG5sZWZ0OiA1MCU7XHJcbnRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTUwJSk7XHJcbi8qIGJhY2tncm91bmQtaW1hZ2U6IHVybChcInN1bjIuanBnXCIpIDtcclxuYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjsgXHJcbmJhY2tncm91bmQtcG9zaXRpb246cmlnaHQ7ICovXHJcblxyXG5iYWNrZ3JvdW5kOiByZ2IoMTk3LDIyOCwyMzUpO1xyXG5iYWNrZ3JvdW5kOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlLCByZ2JhKDE5NywyMjgsMjM1LDEpIDAlLCByZ2JhKDAsMTU3LDIwMywxKSAxMDAlKTtcclxuLyogYmFja2dyb3VuZDogcmdiKDAsMTUxLDI1NSk7XHJcbmJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSgwLDE1MSwyNTUsMSkgMCUsIHJnYmEoMjE3LDE5NCwyMjgsMSkgMTAwJSk7ICovXHJcbi8qIGJhY2tncm91bmQ6IHJnYigyMTUsMjE5LDIyMSk7XHJcbmJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSgyMTUsMjE5LDIyMSwxKSAwJSwgcmdiYSgwLDE1MSwyNTUsMSkgMTAwJSk7ICovXHJcbi8qIGJhY2tncm91bmQ6IGhzbGEoMjA1LCA0NiUsIDMwJSwgMSk7XHJcbmJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgaHNsYSgyMDUsIDQ2JSwgMzAlLCAxKTAlLCBoc2xhKDI2MCwyOSUsMzYlLDEpMTAwJSk7ICovXHJcbn1cclxuXHJcbi5jYXJkIGgxICxcclxuaDYge1xyXG4gIGNvbG9yIDphbGljZWJsdWU7XHJcbn1cclxuXHJcbmxhYmVse1xyXG5jb2xvcjogYWxpY2VibHVlO1xyXG59XHJcbi8qIC5jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tdG9wOiA1MDBweDtcclxufSAqLyJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["LoginComponent","constructor","DService","formBuilder","http","router","ngOnInit","loginForm","group","name","email","login","get","subscribe","res","user","find","a","value","alert","reset","navigate","userData","navigateByUrl","err","onSubmit","form","console","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\login\\login.component.ts","D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n  FormBuilder,\r\n} from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { style } from '@angular/animations';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit{\r\n  public loginForm !: FormGroup;\r\n  constructor ( public DService: DataService,private formBuilder : FormBuilder, private http : HttpClient, private router : Router){}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      name : [''],\r\n      email : ['']\r\n    })\r\n    // console.log( this.DService.userData);\r\n    \r\n  }\r\n\r\n  login(){\r\n    this.http.get<any>(\"https://jsonplaceholder.typicode.com/users\")\r\n    .subscribe(res=>{\r\n      const user = res.find((a:any)=>{\r\n        return a.name === this.loginForm.value.name &&  a.email === this.loginForm.value.email\r\n      })\r\n      // console.log(user);\r\n      \r\n      if(user){\r\n        if(this.loginForm.value.name==\"Leanne Graham\"&&this.loginForm.value.email==\"Sincere@april.biz\"){\r\n          alert (\"Login Success ... WELCOME ADMIN  ^_^\");\r\n          this.loginForm.reset();\r\n          this.router.navigate(['users'])\r\n        }\r\n        else{\r\n          alert (\"Login Success !!\");\r\n        this.loginForm.reset();\r\n        this.router.navigate(['user'])}\r\n        \r\n      }else if(this.DService.userData){\r\n        alert (\"Login Success !!\");\r\n        this.loginForm.reset();\r\n        this.router.navigate(['user'])\r\n      }\r\n      else if(this.loginForm.value.name==\"\"||this.loginForm.value.email==\"\" ){\r\n        alert (\" Name and email are required !! please login again\");\r\n        this.router.navigateByUrl(\"/login\");\r\n      \r\n      }\r\n      else if(this.loginForm.value.name==\"heba\"||this.loginForm.value.email==\"heba@gmail.com\" ){\r\n        alert (\"Login Success .... WELCOME ADMIN HEBA^_^\");\r\n          this.loginForm.reset();\r\n          this.router.navigate(['users'])\r\n      \r\n      }\r\n      else {\r\n\r\n        alert (\"User Not Found !! please signup\");\r\n        this.router.navigateByUrl(\"/register\");\r\n      }\r\n    },err=>{\r\n      alert (\"Something Went Wrong !!\")\r\n    })\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    const user = {\r\n      name: form.value.name,\r\n      email: form.value.email,\r\n    };\r\n\r\n    this.http.get('https://jsonplaceholder.typicode.com/users')\r\n      .subscribe(res => {\r\n        console.log(res);\r\n        form.reset();\r\n      });\r\n          // console.log( this.DService.userData);\r\n\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n  <div class=\"col-md-3\">\r\n  <div class=\"card\">\r\n  <div class=\"text-center\">\r\n    <img src=\"assets/images/login.png\" style=\"width: 100px;\" >\r\n  <h1>Login</h1>\r\n  </div>\r\n \r\n    <form  [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"exampleInputName\" class=\"form-label\">Name</label>\r\n        <input formControlName=\"name\" type=\"text\" class=\"form-control\" id=\"exampleInputName\" >\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n        <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"  >\r\n        <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\r\n      </div>\r\n  \r\n      <button type=\"submit\" class=\"btn btn-primary mb-2 me-3\">Login</button>\r\n  \r\n   \r\n    <a routerLink=\"/register\" style=\"color: aliceblue; margin-top: 10px;\">New User ? Please Click To Sign Up</a>\r\n  </form>\r\n  </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n\r\n\r\n    <!-- <form>\r\n      <form  [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputName\" class=\"form-label\">Name</label>\r\n          <input formControlName=\"name\" type=\"text\" class=\"form-control\" id=\"exampleInputName\">\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n          <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n          <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\r\n        </div>\r\n    \r\n        <button type=\"submit\" class=\"btn btn-primary mb-2\">Login</button>\r\n    \r\n      </form>\r\n      <a routerLink=\"/signup\" style=\"color: aliceblue; margin-top: 10px;\">New User ? Please Click To Sign Up</a>\r\n    </form> -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}