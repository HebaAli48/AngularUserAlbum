{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/users.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/router\";\nexport class LoginComponent {\n  // public loginForm !: FormGroup;\n  constructor(UService, formBuilder, http, router) {\n    this.UService = UService;\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.UService.GetAllUsers().subscribe({\n      next: data => {\n        console.log(data);\n        this.users = data;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n}\n// this.loginForm = this.formBuilder.group({\n//   name : [''],\n//   email : [''],\n//   userId:['']\n// })\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 29,\n  vars: 0,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"card\"], [1, \"text-center\"], [1, \"form\", \"lh-1\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"InputUserName\", 1, \"form-control\"], [\"name\", \"\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"InputEmail1\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [\"email\", \"\"], [\"id\", \"emailHelp\", 1, \"form-text\"], [\"for\", \"userId\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"InputUserId\", 1, \"form-control\"], [\"userId\", \"\"], [\"type\", \"submit\", \"routerLink\", \"/users\", 1, \"btn\", \"btn-primary\", \"me-2\", 3, \"click\"], [\"routerLink\", \"/register\", 2, \"color\", \"aliceblue\", \"margin-top\", \"10px\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\");\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"form\", 5)(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 8, 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 6)(14, \"label\", 10);\n      i0.ɵɵtext(15, \"Email \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 11, 12);\n      i0.ɵɵelementStart(18, \"div\", 13);\n      i0.ɵɵtext(19, \"We'll never share your email with anyone else.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 6)(21, \"label\", 14);\n      i0.ɵɵtext(22, \"User Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 15, 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_25_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(12);\n        const _r1 = i0.ɵɵreference(17);\n        const _r2 = i0.ɵɵreference(24);\n        return i0.ɵɵresetView(ctx.login(_r0.value, _r1.value, _r2.value));\n      });\n      i0.ɵɵtext(26, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"a\", 18);\n      i0.ɵɵtext(28, \"New User ? Please Click To Sign Up\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n  },\n  dependencies: [i4.RouterLink, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm],\n  styles: [\".card[_ngcontent-%COMP%] {\\r\\nborder: none;\\r\\nwidth: 500px;\\r\\npadding: 40px;\\r\\nposition: absolute ;\\r\\ntop: 50%;\\r\\nleft: 50%;\\r\\ntransform: translate(-50%,-50%);\\r\\nbackground: hsla(205, 46%, 30%, 1);\\r\\nbackground: linear-gradient(90deg, hsla(205, 46%, 30%, 1)0%, hsla(260,29%,36%,1)100%);\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], h6[_ngcontent-%COMP%] {\\r\\n  color :aliceblue;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%]{\\r\\ncolor: aliceblue;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsWUFBWTtBQUNaLFlBQVk7QUFDWixhQUFhO0FBQ2IsbUJBQW1CO0FBQ25CLFFBQVE7QUFDUixTQUFTO0FBQ1QsK0JBQStCO0FBQy9CLGtDQUFrQztBQUNsQyxxRkFBcUY7QUFDckY7O0FBRUE7O0VBRUUsZ0JBQWdCO0FBQ2xCOztBQUVBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7O0dBRUciLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XHJcbmJvcmRlcjogbm9uZTtcclxud2lkdGg6IDUwMHB4O1xyXG5wYWRkaW5nOiA0MHB4O1xyXG5wb3NpdGlvbjogYWJzb2x1dGUgO1xyXG50b3A6IDUwJTtcclxubGVmdDogNTAlO1xyXG50cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpO1xyXG5iYWNrZ3JvdW5kOiBoc2xhKDIwNSwgNDYlLCAzMCUsIDEpO1xyXG5iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIGhzbGEoMjA1LCA0NiUsIDMwJSwgMSkwJSwgaHNsYSgyNjAsMjklLDM2JSwxKTEwMCUpO1xyXG59XHJcblxyXG4uY2FyZCBoMSAsXHJcbmg2IHtcclxuICBjb2xvciA6YWxpY2VibHVlO1xyXG59XHJcblxyXG5sYWJlbHtcclxuY29sb3I6IGFsaWNlYmx1ZTtcclxufVxyXG4vKiAuY29udGFpbmVye1xyXG4gICAgbWFyZ2luLXRvcDogNTAwcHg7XHJcbn0gKi8iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nlogin(name, any, email, any, userId, any);\n{\n  this.UService.GetAllUsers().subscribe({\n    next: data => {\n      console.log(data);\n      this.users = data;\n      console.log(this.users);\n    },\n    error: err => {\n      console.log(err);\n    }\n    //       for(var i=0 ; i<this.users;i++){\n    //         if(this.users[i].name==name &&this.users[i].email==email &&this.users[i].id==userId){\n    // console.log(true);\n    //         }\n    //         else{\n    //           console.log(\"err\");\n    //         }\n  });\n}","map":{"version":3,"mappings":";;;;;AAcA,OAAM,MAAOA,cAAc;EAEzB;EACAC,YAAoBC,QAAqB,EAASC,WAAyB,EAAUC,IAAiB,EAAUC,MAAe;IAA3G,aAAQ,GAARH,QAAQ;IAAsB,gBAAW,GAAXC,WAAW;IAAwB,SAAI,GAAJC,IAAI;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEjIC,QAAQ;IACN,IAAI,CAACJ,QAAQ,CAACK,WAAW,EAAE,CAACC,SAAS,CAAC;MACpCC,IAAI,EAAEC,IAAI,IAAG;QACXC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QAEjB,IAAI,CAACG,KAAK,GAAGH,IAAI;MAEnB,CAAC;MACDI,KAAK,EAAEC,GAAG,IAAG;QAACJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;MAAA;KAC/B,CAAC;EACJ;;AAEE;AACA;AACA;AACA;AACA;AArBSf,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MC0CzBC,8BAA4B;MAKtBA,qBAAK;MAAAA,iBAAK;MAGfA,+BAA0B;MAEcA,0BAAS;MAAAA,iBAAQ;MACtDA,+BAAmE;MACrEA,iBAAM;MACNA,+BAAkB;MACsBA,uBAAM;MAAAA,iBAAQ;MACpDA,iCAAgG;MAChGA,gCAAsC;MAAAA,+DAA8C;MAAAA,iBAAM;MAE5FA,+BAAkB;MACuBA,wBAAO;MAAAA,iBAAQ;MACtDA,iCAAiE;MACnEA,iBAAM;MACNA,mCAAgI;MAA1GA;QAAAA;QAAA;QAAA;QAAA;QAAA,OAASA,yDAA4C;MAAA,EAAC;MAAoDA,uBAAM;MAAAA,iBAAS;MAC/IA,8BAAsE;MAAAA,mDAAkC;MAAAA,iBAAI;;;;;;ADzC9GC,KAAK,CAACC,IAAI,EAACC,GAAG,EAAEC,KAAK,EAACD,GAAG,EAAEE,MAAM,EAACF,GAAG,CAAC;AAAA;EACpC,IAAI,CAACtB,QAAQ,CAACK,WAAW,EAAE,CAACC,SAAS,CAAC;IACpCC,IAAI,EAAEC,IAAI,IAAG;MACXC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACG,KAAK,GAACH,IAAI;MACfC,OAAO,CAACC,GAAG,CAAE,IAAI,CAACC,KAAK,CAAC;IAI1B,CAAC;IACDC,KAAK,EAAEC,GAAG,IAAG;MAACJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IAAA;IAEpC;IACA;IACA;IAEA;IACA;IACA;IAEA;GAEO,CAAC","names":["LoginComponent","constructor","UService","formBuilder","http","router","ngOnInit","GetAllUsers","subscribe","next","data","console","log","users","error","err","selectors","decls","vars","consts","template","i0","login","name","any","email","userId"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\login\\login.component.ts","D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup,FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {UsersService } from 'src/app/services/users.service';\nimport { NgForm } from '@angular/forms';\nimport { style } from '@angular/animations';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n\n})\nexport class LoginComponent implements OnInit {\n  users:any;\n  // public loginForm !: FormGroup;\n  constructor (public UService:UsersService,private formBuilder : FormBuilder, private http : HttpClient, private router : Router){}\n\n  ngOnInit(): void {\n    this.UService.GetAllUsers().subscribe({\n      next:(data)=>{\n        console.log(data)\n      \n        this.users = data;\n        \n      },\n      error:(err)=>{console.log(err)}\n    })\n  }\n}\n    // this.loginForm = this.formBuilder.group({\n    //   name : [''],\n    //   email : [''],\n    //   userId:['']\n    // })\n  \n\n  login(name:any, email:any, userId:any){\n    this.UService.GetAllUsers().subscribe({\n      next:(data)=>{\n        console.log(data)\n        this.users=data;\n        console.log( this.users);\n        \n\n        \n      },\n      error:(err)=>{console.log(err)}\n\n//       for(var i=0 ; i<this.users;i++){\n//         if(this.users[i].name==name &&this.users[i].email==email &&this.users[i].id==userId){\n// console.log(true);\n\n//         }\n//         else{\n//           console.log(\"err\");\n          \n//         }\n       \n      })\n    }\n    // this.http.get<any>(\"http://localhost:3000/users\")\n    // .subscribe(res=>{\n    //   const user = res.find((a:any)=>{\n    //     return a.name === this.loginForm.value.name &&  a.email === this.loginForm.value.email&&a.userId === this.loginForm.value.id\n    //   })\n    //   if(user){\n    //     alert (\"Login Success !!\");\n    //     this.loginForm.reset();\n    //     this.router.navigate(['users'])\n    //   } else{\n\n    //     alert (\"User Not Found !! please signup\");\n\n    //   }\n    // },err=>{\n    //   alert (\"Something Went Wrong !!\")\n    // })\n  }\n\n  // onSubmit(form: NgForm) {\n  //   const user = {\n  //     name: form.value.name,\n  //     email: form.value.email,\n  //     userId:form.value.id\n  //   };\n\n  //   this.http.get('http://localhost:3000/users')\n  //     .subscribe(res => {\n  //       console.log(res);\n  //       form.reset();\n  //     });\n  // }\n\n\n  // myValidation=new FormGroup({\n  //   name:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n  //   email:new FormControl(\"\",[Validators.required,Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n  //   phone:new FormControl(\"\",[Validators.required,Validators.pattern( /^[0-9]+$/)]),\n  //   street:new FormControl(\"\",Validators.required),\n  //   suite:new FormControl(\"\",Validators.required),\n  //   city:new FormControl(\"\",[Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n  \n  // })\n  // get NameValid(){\n  //   if((this.myValidation.controls[\"name\"].value!==\"\")){\n      \n  //     return ((this.myValidation.controls[\"name\"].valid))\n     \n  //   }\n  //    return true\n  // }\n  // get PhoneValid(){\n  //   if((this.myValidation.controls[\"phone\"].value!==\"\")){\n      \n  //     return ((this.myValidation.controls[\"phone\"].valid))\n     \n  //   }\n  //    return true\n  // }\n  // get MailValid(){\n  //   if((this.myValidation.controls[\"email\"].value!==\"\")){\n      \n  //     return ((this.myValidation.controls[\"email\"].valid))\n     \n  //   }\n  //    return true\n  // }\n  // get StreetValid(){\n  //   if((this.myValidation.controls[\"street\"].value!==\"\")){\n      \n  //     return ((this.myValidation.controls[\"street\"].valid))\n     \n  //   }\n  //    return true\n  // }\n  // get SuiteValid(){\n  //   if((this.myValidation.controls[\"suite\"].value!==\"\")){\n      \n  //     return ((this.myValidation.controls[\"suite\"].valid))\n     \n  //   }\n  //    return true\n  // }\n  // get CityValid(){\n  //   if((this.myValidation.controls[\"city\"].value!==\"\")){\n      \n  //     return ((this.myValidation.controls[\"city\"].valid))\n     \n  //   }\n  //    return true}\n","<!-- \n\n\n  <div class=\"container mt-5\">\n    <div class=\"row\">\n    <div class=\"col-md-3\">\n    <div class=\"card\">\n    <div class=\"text-center\">\n    <h1>Login</h1>\n    </div>\n\n   <form [formGroup]=\"myValidation\"  class=\"form lh-1\">\n    <div class=\"mb-3\">\n      <label for=\"name\" class=\"form-label\">User Name</label>\n      <input  formControlName=\"name\" #name type=\"text\" class=\"form-control\" id=\"InputUserName\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"email\" class=\"form-label\">Email </label>\n      <input  formControlName=\"email\" #email type=\"email\" class=\"form-control\" id=\"InputEmail1\" aria-describedby=\"emailHelp\">\n      <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"userId\" class=\"form-label\">User Id</label>\n      <input formControlName=\"userId\" #userId type=\"text\" class=\"form-control\" id=\"InputUserId\">\n    </div>\n    <button type=\"submit\" (click)=\"login(name.value, email.value, userId.value)\"  class=\"btn btn-primary  me-2\" routerLink=\"/users\">Submit</button>\n    <a routerLink=\"/register\" style=\"color: aliceblue; margin-top: 10px;\">New User ? Please Click To Sign Up</a>\n  </form>\n\n    </div>\n    </div>\n    </div>\n    </div> -->\n\n\n    <!-- <form>\n      <form  [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n        <div class=\"mb-3\">\n          <label for=\"exampleInputName\" class=\"form-label\">Name</label>\n          <input formControlName=\"name\" type=\"text\" class=\"form-control\" id=\"exampleInputName\">\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n          <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n          <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n        </div>\n    \n        <button type=\"submit\" class=\"btn btn-primary mb-2\">Login</button>\n    \n      </form>\n      <a routerLink=\"/signup\" style=\"color: aliceblue; margin-top: 10px;\">New User ? Please Click To Sign Up</a>\n    </form> -->\n\n\n\n    \n  <div class=\"container mt-5\">\n    <div class=\"row\">\n    <div class=\"col-md-3\">\n    <div class=\"card\">\n    <div class=\"text-center\">\n    <h1>Login</h1>\n    </div>\n\n   <form   class=\"form lh-1\">\n    <div class=\"mb-3\">\n      <label for=\"name\" class=\"form-label\">User Name</label>\n      <input   #name type=\"text\" class=\"form-control\" id=\"InputUserName\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"email\" class=\"form-label\">Email </label>\n      <input   #email type=\"email\" class=\"form-control\" id=\"InputEmail1\" aria-describedby=\"emailHelp\">\n      <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"userId\" class=\"form-label\">User Id</label>\n      <input #userId type=\"text\" class=\"form-control\" id=\"InputUserId\">\n    </div>\n    <button type=\"submit\" (click)=\"login(name.value, email.value, userId.value)\"  class=\"btn btn-primary  me-2\" routerLink=\"/users\">Submit</button>\n    <a routerLink=\"/register\" style=\"color: aliceblue; margin-top: 10px;\">New User ? Please Click To Sign Up</a>\n  </form>\n\n    </div>\n    </div>\n    </div>\n    </div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}