{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet UsersComponent = class UsersComponent {\n  constructor(DService, UService, router) {\n    // console.log(this.DService.userData);\n    this.DService = DService;\n    this.UService = UService;\n    this.router = router;\n    this.myValidation = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n      email: new FormControl('', [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n      phone: new FormControl('', Validators.required),\n      street: new FormControl('', Validators.required),\n      suite: new FormControl('', Validators.required),\n      city: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n    });\n  }\n  ngOnInit() {\n    // console.log(this.DService.userData);\n    this.UService.GetAllUsers().subscribe({\n      next: data => {\n        // console.log(data)\n        this.users = data;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    // if(this.DService.userData){\n    //   // console.log(\"hi\");\n    //    console.log(this.DService.userData);\n    //   let id=(this.users[this.users.length-1].id) +1\n    // //  let Naddress = { this.DService.userData.address.street,this.DService.userData.address.suite,this.DService.userData.address.city };\n    // // let NnewUser = {id,this.DService.userData.name, this.DService.userData.email, this.DService.userData.phone, Naddress };\n    //         this.users.push(this.DService.userData);\n    // }\n  }\n\n  clickUpdate(e) {\n    // console.log(e.target.id);\n    this.ID = e.target.id;\n    console.log(this.ID);\n    console.log(this.users[this.ID - 1]);\n    this.myValidation.setValue({\n      name: this.users[this.ID - 1].name,\n      email: this.users[this.ID - 1].email,\n      phone: this.users[this.ID - 1].phone,\n      street: this.users[this.ID - 1].address.street,\n      suite: this.users[this.ID - 1].address.suite,\n      city: this.users[this.ID - 1].address.city\n    });\n  }\n  delItem() {\n    this.users = this.users.filter(item => item.id != this.ID);\n  }\n  update(name, email, phone, street, suite, city) {\n    // console.log(e);\n    //  console.log(this.ID);\n    //  console.log( this.users[this.ID].name);\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      name,\n      email,\n      phone,\n      address\n    };\n    console.log(newUser);\n    if (this.myValidation.valid) {\n      this.users[this.ID - 1].name = newUser.name;\n      this.users[this.ID - 1].email = newUser.email;\n      this.users[this.ID - 1].phone = newUser.phone;\n      this.users[this.ID - 1].address.street = newUser.address.street;\n      this.users[this.ID - 1].address.suite = newUser.address.suite;\n      this.users[this.ID - 1].address.city = newUser.address.city; // this.user=newUser\n      // this.UService.UpdateUser( this.ID,newUser).subscribe();\n      this.router.navigateByUrl(\"/users\");\n    }\n  }\n  clickAdd() {\n    this.myValidation.setValue({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      street: \"\",\n      suite: \"\",\n      city: \"\"\n    });\n  }\n  add(name, email, phone, street, suite, city) {\n    // console.log(this.users);\n    let id = this.users[this.users.length - 1].id + 1;\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      id,\n      name,\n      email,\n      phone,\n      address\n    };\n    if (this.myValidation.valid) {\n      // this.myEvent.emit(newUser)\n      this.users.push(newUser);\n      // this.UService. AddUser(newUser).subscribe();\n      this.router.navigateByUrl('/users');\n    }\n  }\n  get NameValid() {\n    if (this.myValidation.controls['name'].value !== '') {\n      return this.myValidation.controls['name'].valid;\n    }\n    return true;\n  }\n  get PhoneValid() {\n    if (this.myValidation.controls['phone'].value !== '') {\n      return this.myValidation.controls['phone'].valid;\n    }\n    return true;\n  }\n  get MailValid() {\n    if (this.myValidation.controls['email'].value !== '') {\n      return this.myValidation.controls['email'].valid;\n    }\n    return true;\n  }\n  get StreetValid() {\n    if (this.myValidation.controls['street'].value !== '') {\n      return this.myValidation.controls['street'].valid;\n    }\n    return true;\n  }\n  get SuiteValid() {\n    if (this.myValidation.controls['suite'].value !== '') {\n      return this.myValidation.controls['suite'].valid;\n    }\n    return true;\n  }\n  get CityValid() {\n    if (this.myValidation.controls['city'].value !== '') {\n      return this.myValidation.controls['city'].valid;\n    }\n    return true;\n  }\n};\nUsersComponent = __decorate([Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styles: []\n})], UsersComponent);\nexport { UsersComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","UsersComponent","constructor","DService","UService","router","name","required","pattern","email","phone","street","suite","city","ngOnInit","GetAllUsers","subscribe","next","data","users","error","err","console","log","clickUpdate","e","ID","target","id","myValidation","setValue","address","delItem","filter","item","update","newUser","valid","navigateByUrl","clickAdd","add","length","push","NameValid","controls","value","PhoneValid","MailValid","StreetValid","SuiteValid","CityValid","selector","templateUrl","styles"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\users\\users.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  ID:any;\r\n  user:any;\r\n  constructor(  public DService: DataService, public UService:UsersService,public router: Router){\r\n    // console.log(this.DService.userData);\r\n\r\n  }\r\n    users:any;\r\n  ngOnInit(): void {\r\n    // console.log(this.DService.userData);\r\n    \r\n        this.UService.GetAllUsers().subscribe({\r\n      next:(data)=>{\r\n        // console.log(data)\r\n        this.users = data;\r\n      },\r\n      error:(err)=>{console.log(err)}\r\n    })\r\n    // if(this.DService.userData){\r\n    //   // console.log(\"hi\");\r\n    //    console.log(this.DService.userData);\r\n       \r\n    //   let id=(this.users[this.users.length-1].id) +1\r\n    // //  let Naddress = { this.DService.userData.address.street,this.DService.userData.address.suite,this.DService.userData.address.city };\r\n    // // let NnewUser = {id,this.DService.userData.name, this.DService.userData.email, this.DService.userData.phone, Naddress };\r\n    //         this.users.push(this.DService.userData);\r\n\r\n    // }\r\n  }\r\n  \r\n  clickUpdate(e:any){\r\n    // console.log(e.target.id);\r\nthis.ID=e.target.id\r\nconsole.log(this.ID);\r\n\r\nconsole.log(this.users[(this.ID)-1]);\r\n\r\n\r\n        this.myValidation.setValue({\r\n          name: this.users[(this.ID)-1].name,\r\n          email: this.users[(this.ID)-1].email,\r\n          phone: this.users[(this.ID)-1].phone,\r\n          street: this.users[(this.ID)-1].address.street,\r\n          suite: this.users[(this.ID)-1].address.suite,\r\n          city: this.users[(this.ID)-1].address.city\r\n        });\r\n\r\n   \r\n  }\r\n\r\n  delItem(){\r\n    this.users=this.users.filter((item:any)=>item.id!=this.ID)\r\n\r\n   \r\n  \r\n  }   \r\n  update(name:any, email:any, phone:any, street:any,suite:any, city:any){\r\n    // console.log(e);\r\n  //  console.log(this.ID);\r\n  //  console.log( this.users[this.ID].name);\r\n   \r\n   \r\n    let address={street,suite,city};\r\n    let newUser = {name, email, phone, address};\r\n     console.log(newUser);\r\n    if(this.myValidation.valid){\r\n\r\n\r\n      this.users[(this.ID)-1].name=newUser.name\r\n      this.users[(this.ID)-1].email=newUser.email\r\n      this.users[(this.ID)-1].phone=newUser.phone\r\n      this.users[(this.ID)-1].address.street=newUser.address.street\r\n      this.users[(this.ID)-1].address.suite=newUser.address.suite\r\n      this.users[(this.ID)-1].address.city=newUser.address.city        // this.user=newUser\r\n      // this.UService.UpdateUser( this.ID,newUser).subscribe();\r\n      this.router.navigateByUrl(\"/users\")\r\n      }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  clickAdd(){\r\n    this.myValidation.setValue({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone:\"\",\r\n      street:\"\",\r\n      suite: \"\",\r\n      city:\"\"\r\n    });\r\n  }\r\n\r\n  add(name: any, email: any, phone: any, street: any, suite: any, city: any) {\r\n    // console.log(this.users);\r\n  \r\n\r\n  let id=(this.users[this.users.length-1].id) +1\r\n\r\n    let address = { street, suite, city };\r\n    let newUser = {id,name, email, phone, address };\r\n    if (this.myValidation.valid) {\r\n      // this.myEvent.emit(newUser)\r\n      this.users.push(newUser);\r\n      \r\n      // this.UService. AddUser(newUser).subscribe();\r\n      this.router.navigateByUrl('/users');\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  myValidation = new FormGroup({\r\n    name: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/[a-zA-Z]+/),\r\n    ]),\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/),\r\n    ]),\r\n    phone: new FormControl('', \r\n      Validators.required\r\n     ),\r\n    street: new FormControl('', Validators.required),\r\n    suite: new FormControl('', Validators.required),\r\n    city: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/[a-zA-Z]+/),\r\n    ]),\r\n  });\r\n  get NameValid() {\r\n    if (this.myValidation.controls['name'].value !== '') {\r\n      return this.myValidation.controls['name'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get PhoneValid() {\r\n    if (this.myValidation.controls['phone'].value !== '') {\r\n      return this.myValidation.controls['phone'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get MailValid() {\r\n    if (this.myValidation.controls['email'].value !== '') {\r\n      return this.myValidation.controls['email'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get StreetValid() {\r\n    if (this.myValidation.controls['street'].value !== '') {\r\n      return this.myValidation.controls['street'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get SuiteValid() {\r\n    if (this.myValidation.controls['suite'].value !== '') {\r\n      return this.myValidation.controls['suite'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get CityValid() {\r\n    if (this.myValidation.controls['city'].value !== '') {\r\n      return this.myValidation.controls['city'].valid;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}