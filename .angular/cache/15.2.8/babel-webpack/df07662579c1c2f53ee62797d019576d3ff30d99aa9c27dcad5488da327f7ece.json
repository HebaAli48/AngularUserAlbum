{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet UsersComponent = class UsersComponent {\n  constructor(DService, router) {\n    this.DService = DService;\n    this.router = router;\n    this.myValidation = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z]+/)]),\n      email: new FormControl('', [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]),\n      phone: new FormControl('', Validators.required),\n      street: new FormControl('', Validators.required),\n      suite: new FormControl('', Validators.required),\n      city: new FormControl('', [Validators.required, Validators.pattern(/[a-zA-Z]+/)])\n    });\n  }\n  ngOnInit() {\n    this.UService.GetAllUsers().subscribe({\n      next: data => {\n        console.log(data);\n        this.users = data;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    if (this.DService.userData) {}\n  }\n  clickUpdate(e) {\n    // console.log(e.target.id);\n    this.ID = e.target.id;\n    // console.log(this.users[this.ID]);\n    this.myValidation.setValue({\n      name: this.users[this.ID].name,\n      email: this.users[this.ID].email,\n      phone: this.users[this.ID].phone,\n      street: this.users[this.ID].address.street,\n      suite: this.users[this.ID].address.suite,\n      city: this.users[this.ID].address.city\n    });\n  }\n  delItem() {\n    this.users = this.users.filter(item => item.id != this.ID);\n  }\n  update(name, email, phone, street, suite, city) {\n    // console.log(e);\n    //  console.log(this.ID);\n    //  console.log( this.users[this.ID].name);\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      name,\n      email,\n      phone,\n      address\n    };\n    console.log(newUser);\n    if (this.myValidation.valid) {\n      this.users[this.ID].name = newUser.name;\n      // this.user=newUser\n      // this.UService.UpdateUser( this.ID,newUser).subscribe();\n      this.router.navigateByUrl(\"/users\");\n    }\n    this.users[this.ID].name = newUser.name;\n    this.users[this.ID].email = newUser.email;\n    this.users[this.ID].phone = newUser.phone;\n    this.users[this.ID].address.street = newUser.address.street;\n    this.users[this.ID].address.suite = newUser.address.suite;\n    this.users[this.ID].address.city = newUser.address.city;\n  }\n  add(name, email, phone, street, suite, city) {\n    // console.log(this.users);\n    let id = this.users[this.users.length - 1].id + 1;\n    let address = {\n      street,\n      suite,\n      city\n    };\n    let newUser = {\n      id,\n      name,\n      email,\n      phone,\n      address\n    };\n    if (this.myValidation.valid) {\n      // this.myEvent.emit(newUser)\n      this.users.push(newUser);\n      // this.UService. AddUser(newUser).subscribe();\n      this.router.navigateByUrl('/users');\n    }\n  }\n  get NameValid() {\n    if (this.myValidation.controls['name'].value !== '') {\n      return this.myValidation.controls['name'].valid;\n    }\n    return true;\n  }\n  get PhoneValid() {\n    if (this.myValidation.controls['phone'].value !== '') {\n      return this.myValidation.controls['phone'].valid;\n    }\n    return true;\n  }\n  get MailValid() {\n    if (this.myValidation.controls['email'].value !== '') {\n      return this.myValidation.controls['email'].valid;\n    }\n    return true;\n  }\n  get StreetValid() {\n    if (this.myValidation.controls['street'].value !== '') {\n      return this.myValidation.controls['street'].valid;\n    }\n    return true;\n  }\n  get SuiteValid() {\n    if (this.myValidation.controls['suite'].value !== '') {\n      return this.myValidation.controls['suite'].valid;\n    }\n    return true;\n  }\n  get CityValid() {\n    if (this.myValidation.controls['city'].value !== '') {\n      return this.myValidation.controls['city'].valid;\n    }\n    return true;\n  }\n};\nUsersComponent = __decorate([Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styles: []\n})], UsersComponent);\nexport { UsersComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","UsersComponent","constructor","DService","router","name","required","pattern","email","phone","street","suite","city","ngOnInit","UService","GetAllUsers","subscribe","next","data","console","log","users","error","err","userData","clickUpdate","e","ID","target","id","myValidation","setValue","address","delItem","filter","item","update","newUser","valid","navigateByUrl","add","length","push","NameValid","controls","value","PhoneValid","MailValid","StreetValid","SuiteValid","CityValid","selector","templateUrl","styles"],"sourceRoot":"","sources":["D:\\iti mern\\9-angular\\project\\AngularTask\\src\\app\\components\\users\\users.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  ID:any;\r\n  user:any;\r\n  constructor( public DService: DataService,public router: Router){}\r\n    users:any;\r\n  ngOnInit(): void {\r\n        this.UService.GetAllUsers().subscribe({\r\n      next:(data)=>{\r\n        console.log(data)\r\n        this.users = data;\r\n      },\r\n      error:(err)=>{console.log(err)}\r\n    })\r\n    if(this.DService.userData){}\r\n  }\r\n  \r\n  clickUpdate(e:any){\r\n    // console.log(e.target.id);\r\nthis.ID=e.target.id\r\n// console.log(this.users[this.ID]);\r\n\r\n\r\n        this.myValidation.setValue({\r\n          name: this.users[this.ID].name,\r\n          email: this.users[this.ID].email,\r\n          phone: this.users[this.ID].phone,\r\n          street: this.users[this.ID].address.street,\r\n          suite: this.users[this.ID].address.suite,\r\n          city: this.users[this.ID].address.city\r\n        });\r\n\r\n   \r\n  }\r\n\r\n  delItem(){\r\n    this.users=this.users.filter((item:any)=>item.id!=this.ID)\r\n   \r\n  \r\n  }   \r\n  update(name:any, email:any, phone:any, street:any,suite:any, city:any){\r\n    // console.log(e);\r\n  //  console.log(this.ID);\r\n  //  console.log( this.users[this.ID].name);\r\n   \r\n   \r\n    let address={street,suite,city};\r\n    let newUser = {name, email, phone, address};\r\n     console.log(newUser);\r\n    if(this.myValidation.valid){\r\n\r\n\r\n      this.users[this.ID].name=newUser.name\r\n        // this.user=newUser\r\n      // this.UService.UpdateUser( this.ID,newUser).subscribe();\r\n      this.router.navigateByUrl(\"/users\")\r\n      }\r\n      this.users[this.ID].name=newUser.name\r\n      this.users[this.ID].email=newUser.email\r\n      this.users[this.ID].phone=newUser.phone\r\n      this.users[this.ID].address.street=newUser.address.street\r\n      this.users[this.ID].address.suite=newUser.address.suite\r\n      this.users[this.ID].address.city=newUser.address.city\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  add(name: any, email: any, phone: any, street: any, suite: any, city: any) {\r\n    // console.log(this.users);\r\n\r\n  let id=(this.users[this.users.length-1].id) +1\r\n\r\n    let address = { street, suite, city };\r\n    let newUser = {id,name, email, phone, address };\r\n    if (this.myValidation.valid) {\r\n      // this.myEvent.emit(newUser)\r\n      this.users.push(newUser);\r\n      \r\n      // this.UService. AddUser(newUser).subscribe();\r\n      this.router.navigateByUrl('/users');\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  myValidation = new FormGroup({\r\n    name: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/[a-zA-Z]+/),\r\n    ]),\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/),\r\n    ]),\r\n    phone: new FormControl('', \r\n      Validators.required\r\n     ),\r\n    street: new FormControl('', Validators.required),\r\n    suite: new FormControl('', Validators.required),\r\n    city: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/[a-zA-Z]+/),\r\n    ]),\r\n  });\r\n  get NameValid() {\r\n    if (this.myValidation.controls['name'].value !== '') {\r\n      return this.myValidation.controls['name'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get PhoneValid() {\r\n    if (this.myValidation.controls['phone'].value !== '') {\r\n      return this.myValidation.controls['phone'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get MailValid() {\r\n    if (this.myValidation.controls['email'].value !== '') {\r\n      return this.myValidation.controls['email'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get StreetValid() {\r\n    if (this.myValidation.controls['street'].value !== '') {\r\n      return this.myValidation.controls['street'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get SuiteValid() {\r\n    if (this.myValidation.controls['suite'].value !== '') {\r\n      return this.myValidation.controls['suite'].valid;\r\n    }\r\n    return true;\r\n  }\r\n  get CityValid() {\r\n    if (this.myValidation.controls['city'].value !== '') {\r\n      return this.myValidation.controls['city'].valid;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}